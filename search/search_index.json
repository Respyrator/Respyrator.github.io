{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Respyrator \u00b6 Desarrollo Software Python para ventiladores mec\u00e1nicos. Debido a la alta demanda y la variabilidad en las implementaciones de los diferentes tipos de ventiladores mec\u00e1nicos en desarrollo, este proyecto trata de ser un pegamento para ser usado por todos ellos. Consiste en cuatro capas o componentes. Capa Funci\u00f3n GUI - Usable, sencilla y configurable . - Enfocada para pantallas t\u00e1ctites, pero es adaptable a control por teclas. GUI API - Forma estandar de mandar y recibir informaci\u00f3n de la GUI. Translator - Traduce los bytes recibidos del ventilador. - Empaqueta en bytes la informaci\u00f3n para enviar al ventilador. Communication - Encargada de recibir - mandar datos.por la conexi\u00f3n que se tenga con el ventilador. - La conexi\u00f3n en principio puede ser USB. Cada una de las capas es configurable y adem\u00e1s sustituible por alguna otra que tu quieras. Ejemplo: Si no te sirve nuestra GUI y prefieres crear tu una, la comunicas con la GUI API y configuras las opciones de funcionamiento que permite la pantalla. Si tu ventilador tiene una conexi\u00f3n Ethernet, creas tu modulo de comunicaci\u00f3n, lo conectas con el Translator y lo configuras para indicarle como se lee los datos, y como los empaquetas para ser mandada. S estas interesado en saber m\u00e1s sobre Respyrator, te aconsejamos que primero leas la informaci\u00f3n que hemos dejado sobre los Ventiladores Mec\u00e1nicos. Luego la informaci\u00f3n de Respyrator. Si quieres probarlo, mira la secci\u00f3n de uso. Para poder modificar o contribuir al proyecto, leete por favor como se contribuye al proyecto. Sobre el proyecto Ventilaci\u00f3n Mec\u00e1nica Respyrator Como usarlo Como colaborar","title":"Introducci\u00f3n"},{"location":"#respyrator","text":"Desarrollo Software Python para ventiladores mec\u00e1nicos. Debido a la alta demanda y la variabilidad en las implementaciones de los diferentes tipos de ventiladores mec\u00e1nicos en desarrollo, este proyecto trata de ser un pegamento para ser usado por todos ellos. Consiste en cuatro capas o componentes. Capa Funci\u00f3n GUI - Usable, sencilla y configurable . - Enfocada para pantallas t\u00e1ctites, pero es adaptable a control por teclas. GUI API - Forma estandar de mandar y recibir informaci\u00f3n de la GUI. Translator - Traduce los bytes recibidos del ventilador. - Empaqueta en bytes la informaci\u00f3n para enviar al ventilador. Communication - Encargada de recibir - mandar datos.por la conexi\u00f3n que se tenga con el ventilador. - La conexi\u00f3n en principio puede ser USB. Cada una de las capas es configurable y adem\u00e1s sustituible por alguna otra que tu quieras. Ejemplo: Si no te sirve nuestra GUI y prefieres crear tu una, la comunicas con la GUI API y configuras las opciones de funcionamiento que permite la pantalla. Si tu ventilador tiene una conexi\u00f3n Ethernet, creas tu modulo de comunicaci\u00f3n, lo conectas con el Translator y lo configuras para indicarle como se lee los datos, y como los empaquetas para ser mandada. S estas interesado en saber m\u00e1s sobre Respyrator, te aconsejamos que primero leas la informaci\u00f3n que hemos dejado sobre los Ventiladores Mec\u00e1nicos. Luego la informaci\u00f3n de Respyrator. Si quieres probarlo, mira la secci\u00f3n de uso. Para poder modificar o contribuir al proyecto, leete por favor como se contribuye al proyecto. Sobre el proyecto Ventilaci\u00f3n Mec\u00e1nica Respyrator Como usarlo Como colaborar","title":"Respyrator"},{"location":"about/","text":"Sobre nosotros \u00b6 Este proyecto se distribuye con licencia GPL V3 . El equipo encargado del proyecto somos: Federico Coca Caba Juan Jos\u00e9 Merelo Guerv\u00f3s Crist\u00f3bal Contreras Rubio Israel Blancas Casa Con la colaboraci\u00f3n de: Manolo Ruiz Los contribuidores los puedes encontrar aqu\u00ed","title":"Sobre el proyecto"},{"location":"about/#sobre-nosotros","text":"Este proyecto se distribuye con licencia GPL V3 . El equipo encargado del proyecto somos: Federico Coca Caba Juan Jos\u00e9 Merelo Guerv\u00f3s Crist\u00f3bal Contreras Rubio Israel Blancas Casa Con la colaboraci\u00f3n de: Manolo Ruiz Los contribuidores los puedes encontrar aqu\u00ed","title":"Sobre nosotros"},{"location":"colaborar/colaborar/","text":"Como colaborar \u00b6 Toda ayuda es bien recibida, pero hay que seguir unas normas por el bien del proyecto. Antes incluso de que leas m\u00e1s sobre el proyecto, es importante que sepas como colaborar. Este es un proyecto software, donde sus contribudores est\u00e1n deslocalizados. Requisitos \u00b6 Los requisitos para trabajar son tener instalado: Python 3.8 Gestor de paquetes pip Paquete pipenv Metodolog\u00eda \u00b6 La metodolog\u00eda de trabajo es la siguiente: Haz un fork del repositorio en tu cuenta de Github. Cambia a la rama dev y trabaja sobre ella. Info Te recomendamos que a\u00f1adas tambi\u00e9n el repo oficial en el remote de git, para que puedas tener los cambios del repositorio oficial en tu local. git remote add oficial https://github.com/Respyrator/respirador Mira los issues del proyecto as\u00ed como el tablero de tareas . Antes de hacer avances por tu cuenta, mira si puedes desarrollar alg\u00fan issue que ya est\u00e9 abierto. Tip Es m\u00e1s importante ir cerrando issues , que tener muchas abiertas. Para cualquier desarrollo que quieras hacer: abre primero un issue, ponle las etiquetas correspondientes y justif\u00edcalo. Los desarrollos o cambios que hagas en el programa y que necesiten explicaci\u00f3n, ponlo en la documentaci\u00f3n . Warning Si no documentas , estas dificultando la labor de tus compa\u00f1er@s presentes y futuros. Con ese comportamiento est\u00e1s haciendo m\u00e1s da\u00f1o que bien al proyecto . Haz tests unitarios de todos tus cambios / mejoras y comprueba que pasas tanto los tuyos como los que ya hay. Failure Para los tests se est\u00e1 usando la suite Pytest . Ejecutando el siguiente comando se ejecutan todos los tests pipenv run test Esto no es un proyecto de juguete, la vida de personas van a depender de \u00e9l . Tu c\u00f3digo debe de pasar todos los tests ya hechos, y tu debes de preocuparte de hacer tests exhaustivos para tus mejoras . Si no mantenemos esto, a parte de entorpecer a tus compa\u00f1er@s, podr\u00edan perderse vidas humanas . Comprueba en tu servidor local que la documentaci\u00f3n haya quedado bien (para m\u00e1s informaci\u00f3n, ve a la secci\u00f3n de la documentaci\u00f3n ) Una vez has pasados los tests y la documentaci\u00f3n est\u00e9 bien, guarda los cambios en commits at\u00f3micos . Info Esto quiere decir que para cada mejora hagas debe de ir en un peque\u00f1o commit que pueda ser revisable luego. Los commits con muchos ficheros y cambios distintos dificultan el trabajo . Comprueba que tengas tu rama dev actualizada respecto a la del repo oficial Danger Si no haces esto, puedes generar conflictos entre ficheros, con su correspondiente carga de trabajo extra. Descarga primero los cambios de la rama dev a tu repo local con git pull oficial dev Ahora haz lo siguiente: Resuelve conflictos en los ficheros si los hubiere. Vuelve a pasar los tests. Comprueba la documentaci\u00f3n. Si est\u00e1 todo OK, ya puedes seguir Sube los cambios a tu repo, siempre en la rama dev . Haz un pull request desde tu rama dev a la rama dev . Los pull requests deben de pasar los tests automatizados del sistema de CI configurado. Una vez pasen los tests, los administradores los revisar\u00e1n y los aceptar\u00e1n.","title":"Como colaborar"},{"location":"colaborar/colaborar/#como-colaborar","text":"Toda ayuda es bien recibida, pero hay que seguir unas normas por el bien del proyecto. Antes incluso de que leas m\u00e1s sobre el proyecto, es importante que sepas como colaborar. Este es un proyecto software, donde sus contribudores est\u00e1n deslocalizados.","title":"Como colaborar"},{"location":"colaborar/colaborar/#requisitos","text":"Los requisitos para trabajar son tener instalado: Python 3.8 Gestor de paquetes pip Paquete pipenv","title":"Requisitos"},{"location":"colaborar/colaborar/#metodologia","text":"La metodolog\u00eda de trabajo es la siguiente: Haz un fork del repositorio en tu cuenta de Github. Cambia a la rama dev y trabaja sobre ella. Info Te recomendamos que a\u00f1adas tambi\u00e9n el repo oficial en el remote de git, para que puedas tener los cambios del repositorio oficial en tu local. git remote add oficial https://github.com/Respyrator/respirador Mira los issues del proyecto as\u00ed como el tablero de tareas . Antes de hacer avances por tu cuenta, mira si puedes desarrollar alg\u00fan issue que ya est\u00e9 abierto. Tip Es m\u00e1s importante ir cerrando issues , que tener muchas abiertas. Para cualquier desarrollo que quieras hacer: abre primero un issue, ponle las etiquetas correspondientes y justif\u00edcalo. Los desarrollos o cambios que hagas en el programa y que necesiten explicaci\u00f3n, ponlo en la documentaci\u00f3n . Warning Si no documentas , estas dificultando la labor de tus compa\u00f1er@s presentes y futuros. Con ese comportamiento est\u00e1s haciendo m\u00e1s da\u00f1o que bien al proyecto . Haz tests unitarios de todos tus cambios / mejoras y comprueba que pasas tanto los tuyos como los que ya hay. Failure Para los tests se est\u00e1 usando la suite Pytest . Ejecutando el siguiente comando se ejecutan todos los tests pipenv run test Esto no es un proyecto de juguete, la vida de personas van a depender de \u00e9l . Tu c\u00f3digo debe de pasar todos los tests ya hechos, y tu debes de preocuparte de hacer tests exhaustivos para tus mejoras . Si no mantenemos esto, a parte de entorpecer a tus compa\u00f1er@s, podr\u00edan perderse vidas humanas . Comprueba en tu servidor local que la documentaci\u00f3n haya quedado bien (para m\u00e1s informaci\u00f3n, ve a la secci\u00f3n de la documentaci\u00f3n ) Una vez has pasados los tests y la documentaci\u00f3n est\u00e9 bien, guarda los cambios en commits at\u00f3micos . Info Esto quiere decir que para cada mejora hagas debe de ir en un peque\u00f1o commit que pueda ser revisable luego. Los commits con muchos ficheros y cambios distintos dificultan el trabajo . Comprueba que tengas tu rama dev actualizada respecto a la del repo oficial Danger Si no haces esto, puedes generar conflictos entre ficheros, con su correspondiente carga de trabajo extra. Descarga primero los cambios de la rama dev a tu repo local con git pull oficial dev Ahora haz lo siguiente: Resuelve conflictos en los ficheros si los hubiere. Vuelve a pasar los tests. Comprueba la documentaci\u00f3n. Si est\u00e1 todo OK, ya puedes seguir Sube los cambios a tu repo, siempre en la rama dev . Haz un pull request desde tu rama dev a la rama dev . Los pull requests deben de pasar los tests automatizados del sistema de CI configurado. Una vez pasen los tests, los administradores los revisar\u00e1n y los aceptar\u00e1n.","title":"Metodolog\u00eda"},{"location":"colaborar/documentar/","text":"Como documentar \u00b6 Documentaci\u00f3n: \u00b6 Est\u00e1 hecha con MKDocs . Se ha usado la plantilla para talleres de La Jaquer\u00eda Esa plantilla no es m\u00e1s que una customizaci\u00f3n del tema mkdocs-material (Material Design) (el repo aqu\u00ed ) hecho por Martin Donath, aka @squidfunk Se compone de 2 elementos b\u00e1sicos: Fichero mkdocs.yml Contiene la configuraci\u00f3n de la documentaci\u00f3n. En principio solo deber\u00edas de tocar la secci\u00f3n nav para a\u00f1adir p\u00e1ginas nuevas. La referencia a un fichero de texto se hace pensando que estas dentro de la carpeta doc . Directorio docs : Contiene todos los recursos de la documentaci\u00f3n: ficheros de texto (markdown), imagenes, js, etc. Aqu\u00ed es donde se deben a\u00f1adir en ficheros o ficheros dentro de sub carpetas la documentaci\u00f3n. Trabajar con la documentaci\u00f3n \u00b6 Lo primero arranca el servidor para poder ver la documentaci\u00f3n desde un navegador. Para usa el siguiente comando pipenv run serve Ahora abre en tu navegador la direcci\u00f3n http://127.0.0.1:8000/ . Recuerda dejar la terminal abierta con el servidor funcionando, si no, no podras ver los cambios ver los cambios en tiempo real en el navegador. Si quisieras apagar el servidor, pulsa Ctrl-C o cierra la terminal. Para escribir sigue estos pasos: Comprueba si existe o no la secci\u00f3n donde quieras escribir. Si no existe, genera tu el fichero markdown dentro de docs y luego referencialo en la secci\u00f3n nav del fichero mkdocs.yml . Comprueba que lo que escribes se ve bien. Los documentos largos son pesados de leer, divide en documentos el texto si es muy largo. Si no se te ve bien algo, prueba a recargar la p\u00e1gina en el navegador o a parar y volver arrancar el servidor. Si no sabes escribir en Markdown, no te preocupes porque es sencillisimo. Adem\u00e1s este tema que usa la documentaci\u00f3n tiene plugins para hacer m\u00e1s visual todo. Tienes una ayuda b\u00e1sica para desenvolverte con Markdown. Y otra para poder sacarle m\u00e1s partido al tema Material Design: Escribir Markdown Sacarle jugo al tema Material Design Despliegue de la documentaci\u00f3n \u00b6 La documentaci\u00f3n se va a ver aqu\u00ed . Tiene los ficheros de despliegue .travis.yml para Travis-CI, y tambi\u00e9n el .readthedocs.yml para ReadTheDocs. En principio la documentaci\u00f3n se actualizar\u00e1 sola una vez los cambios se suban a la rama master . Aun as\u00ed, si quieres ver la documentaci\u00f3n que has hecho en una web real, puedes usar el comando pipenv run deploy Esto generar\u00e1 la web, la meter\u00e1 en la rama gh-pages de tu repositorio y podr\u00e1s ver la docu en https:// .io/respirador/.","title":"Documentaci\u00f3n"},{"location":"colaborar/documentar/#como-documentar","text":"","title":"Como documentar"},{"location":"colaborar/documentar/#documentacion","text":"Est\u00e1 hecha con MKDocs . Se ha usado la plantilla para talleres de La Jaquer\u00eda Esa plantilla no es m\u00e1s que una customizaci\u00f3n del tema mkdocs-material (Material Design) (el repo aqu\u00ed ) hecho por Martin Donath, aka @squidfunk Se compone de 2 elementos b\u00e1sicos: Fichero mkdocs.yml Contiene la configuraci\u00f3n de la documentaci\u00f3n. En principio solo deber\u00edas de tocar la secci\u00f3n nav para a\u00f1adir p\u00e1ginas nuevas. La referencia a un fichero de texto se hace pensando que estas dentro de la carpeta doc . Directorio docs : Contiene todos los recursos de la documentaci\u00f3n: ficheros de texto (markdown), imagenes, js, etc. Aqu\u00ed es donde se deben a\u00f1adir en ficheros o ficheros dentro de sub carpetas la documentaci\u00f3n.","title":"Documentaci\u00f3n:"},{"location":"colaborar/documentar/#trabajar-con-la-documentacion","text":"Lo primero arranca el servidor para poder ver la documentaci\u00f3n desde un navegador. Para usa el siguiente comando pipenv run serve Ahora abre en tu navegador la direcci\u00f3n http://127.0.0.1:8000/ . Recuerda dejar la terminal abierta con el servidor funcionando, si no, no podras ver los cambios ver los cambios en tiempo real en el navegador. Si quisieras apagar el servidor, pulsa Ctrl-C o cierra la terminal. Para escribir sigue estos pasos: Comprueba si existe o no la secci\u00f3n donde quieras escribir. Si no existe, genera tu el fichero markdown dentro de docs y luego referencialo en la secci\u00f3n nav del fichero mkdocs.yml . Comprueba que lo que escribes se ve bien. Los documentos largos son pesados de leer, divide en documentos el texto si es muy largo. Si no se te ve bien algo, prueba a recargar la p\u00e1gina en el navegador o a parar y volver arrancar el servidor. Si no sabes escribir en Markdown, no te preocupes porque es sencillisimo. Adem\u00e1s este tema que usa la documentaci\u00f3n tiene plugins para hacer m\u00e1s visual todo. Tienes una ayuda b\u00e1sica para desenvolverte con Markdown. Y otra para poder sacarle m\u00e1s partido al tema Material Design: Escribir Markdown Sacarle jugo al tema Material Design","title":"Trabajar con la documentaci\u00f3n"},{"location":"colaborar/documentar/#despliegue-de-la-documentacion","text":"La documentaci\u00f3n se va a ver aqu\u00ed . Tiene los ficheros de despliegue .travis.yml para Travis-CI, y tambi\u00e9n el .readthedocs.yml para ReadTheDocs. En principio la documentaci\u00f3n se actualizar\u00e1 sola una vez los cambios se suban a la rama master . Aun as\u00ed, si quieres ver la documentaci\u00f3n que has hecho en una web real, puedes usar el comando pipenv run deploy Esto generar\u00e1 la web, la meter\u00e1 en la rama gh-pages de tu repositorio y podr\u00e1s ver la docu en https:// .io/respirador/.","title":"Despliegue de la documentaci\u00f3n"},{"location":"colaborar/markdown/","text":"Chuleta de Markdown \u00b6 Esta es solo una chuleta de Markdown b\u00e1sico. En esta web tienes una referencia muy buena -> Web de Markdown . Para escribir Markdown se recomienda usar como editor VSCode o VSCodium con las extensiones: Markdown All in One Markdownlint T\u00edtulos \u00b6 Esto es un t\u00edtulo 1 -> Usar solo al principio del fichero \u00b6 Esto es un t\u00edtulo 2 -> Usar para dividir en secciones \u00b6 Esto es un t\u00edtulo 3 -> Usar para dividir en subsecciones \u00b6 Esto es un t\u00edtulo 4 -> No recomendado su uso \u00b6 Esto es un t\u00edtulo 5 -> No recomendado su uso \u00b6 Esto es un t\u00edtulo 6 -> No recomendado su uso \u00b6 Textos \u00b6 Texto en negrita . Texto en cursiva . Para poner un salto de linea tienes que poner dos espacios en blanco despu\u00e9s del punto. Esta l\u00ednea est\u00e1 debajo. Pero esta sale seguido. O debes de poner una l\u00ednea vac\u00eda entre medias. Enlaces \u00b6 As\u00ed se pone un enlace a una p\u00e1gina de Internet . As\u00ed se pone un enlace a una p\u00e1gina del propio taller . Im\u00e1genes \u00b6 As\u00ed se pone una imagen desde Internet Y as\u00ed se pone una imagen desde el propio taller Si quieres centrarla puedes usar Listas \u00b6 Listas sin orden con * , ejemplo: Esto es una lista Lista sin orden. Listas ordenadas con 1. , ejemplo: Esto es una Lista ordenada Citas \u00b6 Si quieres poner una cita tienes que usar > delante del texto, ejemplo: Esto es una cita Esto es una cita anidada Esto es una cita doblemente anidada Regla horizontal \u00b6 Se hace para poner una l\u00ednea que divisa visualmente una secci\u00f3n de otra. Aqu\u00ed hay una. Tablas \u00b6 En este ejemplo tienes una tabla con 3 columnas: La primera tiene el texto fijado a la izquierda. La segunda tiene el texto fijado al centro. La tercera tiene el texto fijado a la derecha. Texto a la izquierda Texto en el centro Texto en la derecha En un lugar de la mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivia un hidalgo de los de lanza en astillero, adarga antigua, roc\u00edn flaco y galgo corredor... L\u00edneas de c\u00f3digo \u00b6 Para poner c\u00f3digo en l\u00ednea, tienes que ponerlo entre las comillas `. Aqu\u00ed tienes un ejemplo de c\u00f3digo en l\u00ednea. Si quisieras poner un bloque de c\u00f3digo tienes que poner 3 comillas `, debajo el c\u00f3digo, y una \u00faltima l\u00ednea con otras 3 comillas. Puedes incluso espec\u00edficarle el lenguaje del c\u00f3digo para que te lo coloree. Ah\u00ed va un ejemplo en Python: import antigravity print ( 'Hola mundo' )","title":"Escribir en Markdown"},{"location":"colaborar/markdown/#chuleta-de-markdown","text":"Esta es solo una chuleta de Markdown b\u00e1sico. En esta web tienes una referencia muy buena -> Web de Markdown . Para escribir Markdown se recomienda usar como editor VSCode o VSCodium con las extensiones: Markdown All in One Markdownlint","title":"Chuleta de Markdown"},{"location":"colaborar/markdown/#titulos","text":"","title":"T\u00edtulos"},{"location":"colaborar/markdown/#esto-es-un-titulo-1-usar-solo-al-principio-del-fichero","text":"","title":"Esto es un t\u00edtulo 1 -&gt; Usar solo al principio del fichero"},{"location":"colaborar/markdown/#esto-es-un-titulo-2-usar-para-dividir-en-secciones","text":"","title":"Esto es un t\u00edtulo 2 -&gt; Usar para dividir en secciones"},{"location":"colaborar/markdown/#esto-es-un-titulo-3-usar-para-dividir-en-subsecciones","text":"","title":"Esto es un t\u00edtulo 3 -&gt; Usar para dividir en subsecciones"},{"location":"colaborar/markdown/#esto-es-un-titulo-4-no-recomendado-su-uso","text":"","title":"Esto es un t\u00edtulo 4 -&gt; No recomendado su uso"},{"location":"colaborar/markdown/#esto-es-un-titulo-5-no-recomendado-su-uso","text":"","title":"Esto es un t\u00edtulo 5 -&gt; No recomendado su uso"},{"location":"colaborar/markdown/#esto-es-un-titulo-6-no-recomendado-su-uso","text":"","title":"Esto es un t\u00edtulo 6 -&gt; No recomendado su uso"},{"location":"colaborar/markdown/#textos","text":"Texto en negrita . Texto en cursiva . Para poner un salto de linea tienes que poner dos espacios en blanco despu\u00e9s del punto. Esta l\u00ednea est\u00e1 debajo. Pero esta sale seguido. O debes de poner una l\u00ednea vac\u00eda entre medias.","title":"Textos"},{"location":"colaborar/markdown/#enlaces","text":"As\u00ed se pone un enlace a una p\u00e1gina de Internet . As\u00ed se pone un enlace a una p\u00e1gina del propio taller .","title":"Enlaces"},{"location":"colaborar/markdown/#imagenes","text":"As\u00ed se pone una imagen desde Internet Y as\u00ed se pone una imagen desde el propio taller Si quieres centrarla puedes usar","title":"Im\u00e1genes"},{"location":"colaborar/markdown/#listas","text":"Listas sin orden con * , ejemplo: Esto es una lista Lista sin orden. Listas ordenadas con 1. , ejemplo: Esto es una Lista ordenada","title":"Listas"},{"location":"colaborar/markdown/#citas","text":"Si quieres poner una cita tienes que usar > delante del texto, ejemplo: Esto es una cita Esto es una cita anidada Esto es una cita doblemente anidada","title":"Citas"},{"location":"colaborar/markdown/#regla-horizontal","text":"Se hace para poner una l\u00ednea que divisa visualmente una secci\u00f3n de otra. Aqu\u00ed hay una.","title":"Regla horizontal"},{"location":"colaborar/markdown/#tablas","text":"En este ejemplo tienes una tabla con 3 columnas: La primera tiene el texto fijado a la izquierda. La segunda tiene el texto fijado al centro. La tercera tiene el texto fijado a la derecha. Texto a la izquierda Texto en el centro Texto en la derecha En un lugar de la mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivia un hidalgo de los de lanza en astillero, adarga antigua, roc\u00edn flaco y galgo corredor...","title":"Tablas"},{"location":"colaborar/markdown/#lineas-de-codigo","text":"Para poner c\u00f3digo en l\u00ednea, tienes que ponerlo entre las comillas `. Aqu\u00ed tienes un ejemplo de c\u00f3digo en l\u00ednea. Si quisieras poner un bloque de c\u00f3digo tienes que poner 3 comillas `, debajo el c\u00f3digo, y una \u00faltima l\u00ednea con otras 3 comillas. Puedes incluso espec\u00edficarle el lenguaje del c\u00f3digo para que te lo coloree. Ah\u00ed va un ejemplo en Python: import antigravity print ( 'Hola mundo' )","title":"L\u00edneas de c\u00f3digo"},{"location":"colaborar/material/","text":"Material Design \u00b6 Esta chuleta es un copia-pega modificado de esta p\u00e1gina . B\u00e1sicamente es un Markdown espec\u00edfico para poder ser usado con el tema Material Design y sacarle m\u00e1s partido. Enlaces \u00b6 Existe la posibilidad de utilizar referencias a enlaces que se definen posteriormente. En ese caso unicamente incluimos el n\u00famero de enlace. M\u00e1s adelante es necesario definir el enlace que corresponde con cada n\u00famero y, opcionalmente, un texto descriptivo. 1 2 3 4 Podemos comprar un ordenador ( Dell )[ 1 ] o ( Apple )[ 2 ]. [ 1 ]: http : // dell . com / \"Comprar en Dell\" [ 2 ]: http : // apple . com / \"Comprar en Apple\" Podemos comprar un ordenador Dell o Apple . Imagenes \u00b6 Tambi\u00e9n es posible utilizar referencias que es necesario definir posteriormente. 1 2 3 ! [ texto alternativo ][ id ] [ id ] : / img / md - logo . png \"Titulo opcional\" Secuencias de escape \u00b6 Puede ocurrir que alguno de los caracteres especiales utilizados en markdown aparezcan de forma fortuita en el texto y originen efectos no deseados. Para evitarlo podemos utilizar las secuencias de escape para especificar que deseamos utilizar el caracter como texto sin que tenga ning\u00fan efecto colateral. Podemos utilizar el caracter '\\' junto con cualquiera de los siguientes para crear una secuencia de escape. 1 2 3 4 5 6 7 8 9 10 11 12 \\ backslash ` backtick * asterisco _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark C\u00f3digo \u00b6 Para marcar texto como c\u00f3digo es necesario indentar cada l\u00ednea del bloque con cuatro espacios o una tabulaci\u00f3n. Si el c\u00f3digo va embebido en un p\u00e1rrafo, es neceario rodearlo por comillas simples invertidas. Consultar la secci\u00f3n de CodeHilite y de InlineHilite para funcionalidades extendidas. Extensiones \u00b6 Admonition \u00b6 Extensi\u00f3n incluida en la librer\u00eda est\u00e1ndar de Markdown que permite incluir contenido adicional en cajas de color con un t\u00edtulo y un icono. Por ejemplo para res\u00famenes, notas, consejos o avisos. !!! note Esto es un ejemplo de nota (note, seealso). Note Esto es un ejemplo de nota (note, seealso). !!! note \"Esta es una nota con t\u00edtulo\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esta es una nota con t\u00edtulo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! note \"\" Esta nota va sin t\u00edtulo. Esta nota va sin t\u00edtulo. En vez de note es posible utilizar las siguientes etiquetas: summary, info, tip, success, question, warning, failure, danger, bug y quote. Summary Esto es un ejemplo de sumario (summary, tldr). Info Esto es un ejemplo de bloque informativo (info, todo). Tip Esto es un ejemplo de consejo o truco (tip, hint, important). Success Esto es un ejemplo de bloque de \u00e9xito (success, check, done). Question Esto es un ejemplo de pregunta (question, help, faq). Warning Esto es un ejemplo de precauci\u00f3n (warning, caution, attention). Failure Esto es un ejemplo de fallo (failure, fail, missing). Danger Esto es un ejemplo de peligro (danger, error). Bug Esto es un ejemplo de error (bug). Quote Esto es un ejemplo de cita (quote, cite). Details \u00b6 Para crear bloques colapsables que puedan ocultar su contenido. Bloque cerrado. Abreme !!! Ahora lo has abierto. Bloque abierto inicialmente Bloque dentro de otro bloque Algo de contenido. Bloque con tema de peligro Algo de contenido. Bloque con tema de precauci\u00f3n Algo de contenido. Bloque con tema de \u00e9xito Algo de contenido. CodeHilite \u00b6 Extensi\u00f3n incluida en la librer\u00eda est\u00e1ndar de Markdown que permite resaltar la sintaxis de los bloques de c\u00f3digo. Como lenguajes soportados est\u00e1n entre otros: markdown, python, c, cpp, csharp, html, javascript, JSON, XML. Ejemplo utilizando comillas simples. ``` python import tensorflow as tf ``` Resultado: import tensorflow as tf Ejemplo utilizando bloque tabulado con cuatro espacios: :::python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Ejemplo utilizando bloque tabulado y n\u00fameros de l\u00ednea: #!python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Es posible resaltar l\u00edneas concretas de c\u00f3digo con hl_lines. #!python hl_lines=\"3 4\" Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] InlineHilite \u00b6 Permite embeber c\u00f3digo en el texto mediante #!languaje code o bien :::languaje code entre comillas simples inversas. Ejemplo: Aqui se presenta este c\u00f3digo `#!c #include <stdio.h>` embebido en el texto. Resultado: Aqui se presenta este c\u00f3digo #include <stdio.h> embebido en el texto. Ejemplo: Aqui se presenta este otro c\u00f3digo `:::c #include <stdlib.h>` embebido en el texto. Resultado: Aqui se presenta este otro c\u00f3digo #include <stdlib.h> embebido en el texto. Ejemplo: C\u00f3digo javascript: `#!js function pad(v){return ('0'+v).split('').reverse().splice(0,2).reverse().join('')}`. Resultado: C\u00f3digo javascript: function pad ( v ){ return ( '0' + v ). split ( '' ). reverse (). splice ( 0 , 2 ). reverse (). join ( '' )} . Mark \u00b6 Permite marcar texto en amarillo fosforito . La anterior frase se ha generado as\u00ed: Permite marcar texto en ==amarillo fosforito==. Footnotes \u00b6 Otra extensi\u00f3n de la libreria est\u00e1ndar para incluir notas al pie de p\u00e1gina. Se inserta una referencia en el texto, la cual puede ser definida en cualquier parte del documento. La definici\u00f3n aparecer\u00e1 en el pie de p\u00e1gina. La referencia consiste en un sombrerete seguido de un identificador num\u00e9rico [1, 2, 3, ...] o bien de nombres [Cuartas et al. 2012]. Ejemplo: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Resultado: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 La definici\u00f3n de los contenidos de la nota al pie puede realizarse en una \u00fanica l\u00ednea si el texto es corto: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. o bien en un bloque de texto indentado cuatro espacios, que comienze en la siguiente l\u00ednea de la etiqueta, si el texto es largo. [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Arithmatex MathJax \u00b6 Basado en MathJax . Permite introducir equaciones escritas en TeX dentro de bloques o en l\u00ednea con el texto. Ver este hilo para una r\u00e1pida referencia sobre la sintaxis TeX. Ejemplo: $$\\frac{n!}{k!(n-k)!} = \\binom{n}{k}$$ $$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$$ Resultado: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6} \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6} Ejemplo: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ Resultado: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} Letras griegas \u00b6 $\\alpha, \\beta, ..., \\omega$ \\alpha, \\beta, ..., \\omega \\alpha, \\beta, ..., \\omega $\\Gamma, \\Delta, ..., \\Omega$ \\Gamma, \\Delta, ..., \\Omega \\Gamma, \\Delta, ..., \\Omega Superindices y subindices \u00b6 $x_i^2 \\log_2 x$ x_i^2 \\log_2 x x_i^2 \\log_2 x Grupos \u00b6 Super\u00edndices, sub\u00edndices y otras operaciones aplican solamente al siguiente \"grupo\". Un \"grupo\" es un \u00fanico s\u00edmbolo o un cualquier f\u00f3rmula ubicada entre llaves {...} $10^10$ 10^10 10^10 $10^{10}$ 10^{10} 10^{10} ${x^y}^z$ {x^y}^z {x^y}^z Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Car\u00e1cter\u00edsticas extra"},{"location":"colaborar/material/#material-design","text":"Esta chuleta es un copia-pega modificado de esta p\u00e1gina . B\u00e1sicamente es un Markdown espec\u00edfico para poder ser usado con el tema Material Design y sacarle m\u00e1s partido.","title":"Material Design"},{"location":"colaborar/material/#enlaces","text":"Existe la posibilidad de utilizar referencias a enlaces que se definen posteriormente. En ese caso unicamente incluimos el n\u00famero de enlace. M\u00e1s adelante es necesario definir el enlace que corresponde con cada n\u00famero y, opcionalmente, un texto descriptivo. 1 2 3 4 Podemos comprar un ordenador ( Dell )[ 1 ] o ( Apple )[ 2 ]. [ 1 ]: http : // dell . com / \"Comprar en Dell\" [ 2 ]: http : // apple . com / \"Comprar en Apple\" Podemos comprar un ordenador Dell o Apple .","title":"Enlaces"},{"location":"colaborar/material/#imagenes","text":"Tambi\u00e9n es posible utilizar referencias que es necesario definir posteriormente. 1 2 3 ! [ texto alternativo ][ id ] [ id ] : / img / md - logo . png \"Titulo opcional\"","title":"Imagenes"},{"location":"colaborar/material/#secuencias-de-escape","text":"Puede ocurrir que alguno de los caracteres especiales utilizados en markdown aparezcan de forma fortuita en el texto y originen efectos no deseados. Para evitarlo podemos utilizar las secuencias de escape para especificar que deseamos utilizar el caracter como texto sin que tenga ning\u00fan efecto colateral. Podemos utilizar el caracter '\\' junto con cualquiera de los siguientes para crear una secuencia de escape. 1 2 3 4 5 6 7 8 9 10 11 12 \\ backslash ` backtick * asterisco _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark","title":"Secuencias de escape"},{"location":"colaborar/material/#codigo","text":"Para marcar texto como c\u00f3digo es necesario indentar cada l\u00ednea del bloque con cuatro espacios o una tabulaci\u00f3n. Si el c\u00f3digo va embebido en un p\u00e1rrafo, es neceario rodearlo por comillas simples invertidas. Consultar la secci\u00f3n de CodeHilite y de InlineHilite para funcionalidades extendidas.","title":"C\u00f3digo"},{"location":"colaborar/material/#extensiones","text":"","title":"Extensiones"},{"location":"colaborar/material/#admonition","text":"Extensi\u00f3n incluida en la librer\u00eda est\u00e1ndar de Markdown que permite incluir contenido adicional en cajas de color con un t\u00edtulo y un icono. Por ejemplo para res\u00famenes, notas, consejos o avisos. !!! note Esto es un ejemplo de nota (note, seealso). Note Esto es un ejemplo de nota (note, seealso). !!! note \"Esta es una nota con t\u00edtulo\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Esta es una nota con t\u00edtulo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! note \"\" Esta nota va sin t\u00edtulo. Esta nota va sin t\u00edtulo. En vez de note es posible utilizar las siguientes etiquetas: summary, info, tip, success, question, warning, failure, danger, bug y quote. Summary Esto es un ejemplo de sumario (summary, tldr). Info Esto es un ejemplo de bloque informativo (info, todo). Tip Esto es un ejemplo de consejo o truco (tip, hint, important). Success Esto es un ejemplo de bloque de \u00e9xito (success, check, done). Question Esto es un ejemplo de pregunta (question, help, faq). Warning Esto es un ejemplo de precauci\u00f3n (warning, caution, attention). Failure Esto es un ejemplo de fallo (failure, fail, missing). Danger Esto es un ejemplo de peligro (danger, error). Bug Esto es un ejemplo de error (bug). Quote Esto es un ejemplo de cita (quote, cite).","title":"Admonition"},{"location":"colaborar/material/#details","text":"Para crear bloques colapsables que puedan ocultar su contenido. Bloque cerrado. Abreme !!! Ahora lo has abierto. Bloque abierto inicialmente Bloque dentro de otro bloque Algo de contenido. Bloque con tema de peligro Algo de contenido. Bloque con tema de precauci\u00f3n Algo de contenido. Bloque con tema de \u00e9xito Algo de contenido.","title":"Details"},{"location":"colaborar/material/#codehilite","text":"Extensi\u00f3n incluida en la librer\u00eda est\u00e1ndar de Markdown que permite resaltar la sintaxis de los bloques de c\u00f3digo. Como lenguajes soportados est\u00e1n entre otros: markdown, python, c, cpp, csharp, html, javascript, JSON, XML. Ejemplo utilizando comillas simples. ``` python import tensorflow as tf ``` Resultado: import tensorflow as tf Ejemplo utilizando bloque tabulado con cuatro espacios: :::python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Ejemplo utilizando bloque tabulado y n\u00fameros de l\u00ednea: #!python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Es posible resaltar l\u00edneas concretas de c\u00f3digo con hl_lines. #!python hl_lines=\"3 4\" Resultado: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"CodeHilite"},{"location":"colaborar/material/#inlinehilite","text":"Permite embeber c\u00f3digo en el texto mediante #!languaje code o bien :::languaje code entre comillas simples inversas. Ejemplo: Aqui se presenta este c\u00f3digo `#!c #include <stdio.h>` embebido en el texto. Resultado: Aqui se presenta este c\u00f3digo #include <stdio.h> embebido en el texto. Ejemplo: Aqui se presenta este otro c\u00f3digo `:::c #include <stdlib.h>` embebido en el texto. Resultado: Aqui se presenta este otro c\u00f3digo #include <stdlib.h> embebido en el texto. Ejemplo: C\u00f3digo javascript: `#!js function pad(v){return ('0'+v).split('').reverse().splice(0,2).reverse().join('')}`. Resultado: C\u00f3digo javascript: function pad ( v ){ return ( '0' + v ). split ( '' ). reverse (). splice ( 0 , 2 ). reverse (). join ( '' )} .","title":"InlineHilite"},{"location":"colaborar/material/#mark","text":"Permite marcar texto en amarillo fosforito . La anterior frase se ha generado as\u00ed: Permite marcar texto en ==amarillo fosforito==.","title":"Mark"},{"location":"colaborar/material/#footnotes","text":"Otra extensi\u00f3n de la libreria est\u00e1ndar para incluir notas al pie de p\u00e1gina. Se inserta una referencia en el texto, la cual puede ser definida en cualquier parte del documento. La definici\u00f3n aparecer\u00e1 en el pie de p\u00e1gina. La referencia consiste en un sombrerete seguido de un identificador num\u00e9rico [1, 2, 3, ...] o bien de nombres [Cuartas et al. 2012]. Ejemplo: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Resultado: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 La definici\u00f3n de los contenidos de la nota al pie puede realizarse en una \u00fanica l\u00ednea si el texto es corto: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. o bien en un bloque de texto indentado cuatro espacios, que comienze en la siguiente l\u00ednea de la etiqueta, si el texto es largo. [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Footnotes"},{"location":"colaborar/material/#arithmatex-mathjax","text":"Basado en MathJax . Permite introducir equaciones escritas en TeX dentro de bloques o en l\u00ednea con el texto. Ver este hilo para una r\u00e1pida referencia sobre la sintaxis TeX. Ejemplo: $$\\frac{n!}{k!(n-k)!} = \\binom{n}{k}$$ $$\\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6}$$ Resultado: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6} \\sum_{i=0}^n i^2 = \\frac{(n^2+n)(2n+1)}{6} Ejemplo: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ Resultado: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"Arithmatex MathJax"},{"location":"colaborar/material/#letras-griegas","text":"$\\alpha, \\beta, ..., \\omega$ \\alpha, \\beta, ..., \\omega \\alpha, \\beta, ..., \\omega $\\Gamma, \\Delta, ..., \\Omega$ \\Gamma, \\Delta, ..., \\Omega \\Gamma, \\Delta, ..., \\Omega","title":"Letras griegas"},{"location":"colaborar/material/#superindices-y-subindices","text":"$x_i^2 \\log_2 x$ x_i^2 \\log_2 x x_i^2 \\log_2 x","title":"Superindices y subindices"},{"location":"colaborar/material/#grupos","text":"Super\u00edndices, sub\u00edndices y otras operaciones aplican solamente al siguiente \"grupo\". Un \"grupo\" es un \u00fanico s\u00edmbolo o un cualquier f\u00f3rmula ubicada entre llaves {...} $10^10$ 10^10 10^10 $10^{10}$ 10^{10} 10^{10} ${x^y}^z$ {x^y}^z {x^y}^z Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Grupos"},{"location":"respyrator/comunicacion/","text":"Comunicaci\u00f3n Serie con el respirador \u00b6 La comunicaci\u00f3n serie se ha implementado en el m\u00f3dulo sercomm . Capa de comunicaci\u00f3n serie \u00b6 Su configuraci\u00f3n est\u00e1 en la secci\u00f3n [SERIAL] del fichero configuration.ini . El fichero comm.py contiene la clase Comm encargada de: Abrir / cerrar y mantener una conexi\u00f3n serie estable. Si la comunicaci\u00f3n no se puede establecer, lanza una excepci\u00f3n. Permite leer / mandar una linea / trama (conjunto de bytes) de bytes. Permite leer / mandar una linea de strings (se ha puesto como opcional). La opci\u00f3n de obtener la trama como strings, es porque es m\u00e1s c\u00f3moda quiz\u00e1s en futuras soluciones y tambi\u00e9n para debuggear / cacharrear. Capa de Traducci\u00f3n de tramas \u00b6 Dentro del m\u00f3dulo sercomm podr\u00eda ir tambi\u00e9n los traductores de tramas. La idea de los traductores es la siguiente: Las tramas puede ser que vayan en campos definidos por bytes. Un traductor de recepci\u00f3n por ejemplo: Se le pasa la trama en bytes recibida por el serial. A trav\u00e9s de una funci\u00f3n con un par\u00e1metro o varios, le indicas que bytes quieres que te devuelva y en que tipo (solo devuelve un campo). Por ejemplo, le pasas '1B' y 'int' y te devuelve el byte 0x1B convertido en entero. Otro ejemplo, le pasas [1C, 1D] y float y te devuelve el valor de esos bytes juntos convertidos en un flotante. As\u00ed puedes obtener los campos de la trama que te sean necesarios y sirve para cada trama que se le ocurra a cualquiera. Un traductor de transmisi\u00f3n por ejemplo: Se le pasa un diccionario con todos los campos de la trama. Su clave - valor podr\u00eda ser '1B': campo_n . El traductor te devuelve la trama de envio completa, convirtiendo a byte cada valor , siendo su posici\u00f3n en la trama la clave .","title":"Comunicaci\u00f3n Serie con el respirador"},{"location":"respyrator/comunicacion/#comunicacion-serie-con-el-respirador","text":"La comunicaci\u00f3n serie se ha implementado en el m\u00f3dulo sercomm .","title":"Comunicaci\u00f3n Serie con el respirador"},{"location":"respyrator/comunicacion/#capa-de-comunicacion-serie","text":"Su configuraci\u00f3n est\u00e1 en la secci\u00f3n [SERIAL] del fichero configuration.ini . El fichero comm.py contiene la clase Comm encargada de: Abrir / cerrar y mantener una conexi\u00f3n serie estable. Si la comunicaci\u00f3n no se puede establecer, lanza una excepci\u00f3n. Permite leer / mandar una linea / trama (conjunto de bytes) de bytes. Permite leer / mandar una linea de strings (se ha puesto como opcional). La opci\u00f3n de obtener la trama como strings, es porque es m\u00e1s c\u00f3moda quiz\u00e1s en futuras soluciones y tambi\u00e9n para debuggear / cacharrear.","title":"Capa de comunicaci\u00f3n serie"},{"location":"respyrator/comunicacion/#capa-de-traduccion-de-tramas","text":"Dentro del m\u00f3dulo sercomm podr\u00eda ir tambi\u00e9n los traductores de tramas. La idea de los traductores es la siguiente: Las tramas puede ser que vayan en campos definidos por bytes. Un traductor de recepci\u00f3n por ejemplo: Se le pasa la trama en bytes recibida por el serial. A trav\u00e9s de una funci\u00f3n con un par\u00e1metro o varios, le indicas que bytes quieres que te devuelva y en que tipo (solo devuelve un campo). Por ejemplo, le pasas '1B' y 'int' y te devuelve el byte 0x1B convertido en entero. Otro ejemplo, le pasas [1C, 1D] y float y te devuelve el valor de esos bytes juntos convertidos en un flotante. As\u00ed puedes obtener los campos de la trama que te sean necesarios y sirve para cada trama que se le ocurra a cualquiera. Un traductor de transmisi\u00f3n por ejemplo: Se le pasa un diccionario con todos los campos de la trama. Su clave - valor podr\u00eda ser '1B': campo_n . El traductor te devuelve la trama de envio completa, convirtiendo a byte cada valor , siendo su posici\u00f3n en la trama la clave .","title":"Capa de Traducci\u00f3n de tramas"},{"location":"respyrator/gui/","text":"Interfaz Gr\u00e1fica \u00b6 TODO:","title":"Interfaz Gr\u00e1fica"},{"location":"respyrator/gui/#interfaz-grafica","text":"TODO:","title":"Interfaz Gr\u00e1fica"},{"location":"respyrator/programa/","text":"Programa \u00b6 El programa consiste en 4 capas: Comunicaci\u00f3n serial bidireccional con el respirador. As\u00ed por un USB puedes comunicarte con lo que sea por ahora. Mas adelante podemos ampliarlo para m\u00e1s interfaces, como MQTT, Websockets, etc, si hiciese falta. Traductores de los mensajes de entrada y generador de los de salida. En principio podemos tomar como ejemplo el de las tramas que tenemos. Est\u00e1 abierto a ser ampliado. Operaciones con los datos de entrada y de salida. Esto ya ser\u00eda una capa que tendr\u00eda que modificarse para cada respirador. Interfaz visual para mostrar datos y obtener modificaciones de par\u00e1metros. Tip Dentro de cada fichero python, se ha a\u00f1adido (y debes de a\u00f1adir) la siguiente cabecera para ayudar a cumplir las normas del PEP8 . Por un lado tienes el orden en el que deben de ir los imports. Por otro tienes una referencia de como de larga puedes ser las l\u00edneas. Recuerda que cada l\u00ednea no puede contener m\u00e1s de 80 caracteres . # Built-in -------------------------------------------------------------------- # Installed ------------------------------------------------------------------- # Coded ----------------------------------------------------------------------- # Program --------------------------------------------------------------------- Cada import que hagas, m\u00e9telo debajo de cada comentario correspondiente, como en el siguiente ejemplo: # Built-in -------------------------------------------------------------------- import logging from time import time , sleep # Installed ------------------------------------------------------------------- import serial from serial.tools.list_ports import comports # Coded ----------------------------------------------------------------------- import mimodulo from mimodulo import miscript # Program --------------------------------------------------------------------- Estructura del programa \u00b6 El c\u00f3digo fuente se ha puesto dentro de la carpeta src . As\u00ed es directo saber donde est\u00e1 codigo fuente a nivel de repo, no generando ansias de estar cambiando el nombre del programa y evitando tener problemas con los imports (no hace falta refactorizar los imports). Funci\u00f3n Fichero-Carpeta Explicaci\u00f3n Configuraci\u00f3n configurarion.ini Fichero con la configuraci\u00f3n settings.py Lee la configuraci\u00f3n del fichero anterior. Genera las constantes - objectos globales para cada parte del proyecto Comunicaci\u00f3n Serie sercomm M\u00f3dulo encargado de la comunicaci\u00f3n serie Interfaz Gr\u00e1fica gui M\u00f3dulo con el frontend del programa TODO: ir a\u00f1adiendo lo que falte Logs \u00b6 Para poder tener un control de lo que ocurre en el programa se usan los llamados logs. Son mensajes que se pueden ver por la consola o ir almacenando en ficheros. En este caso se ha optado en que se autogenere una carpeta log a nivel de repositorio, es decir, fuera de la carpeta src . Los objetos dentro del programa encargados de generar estos logs se llaman loggers , y se encuentran definidos en el settings.py . Se han creado 2: logapp : Este es el logger principal que se usa para el programa. Manda su informaci\u00f3n, tanto por consola, como a un fichero de logs. logmcu : Este logger es secundario, y sirve para poder controlar que ocurre en el respirador. Hay MCUs que poseen varios puertos serial, como la placa Arduino Mega que tiene tres. As\u00ed, si se quiere, se puede tener un control de lo que ocurre en el respirador a nivel interno.","title":"Programa"},{"location":"respyrator/programa/#programa","text":"El programa consiste en 4 capas: Comunicaci\u00f3n serial bidireccional con el respirador. As\u00ed por un USB puedes comunicarte con lo que sea por ahora. Mas adelante podemos ampliarlo para m\u00e1s interfaces, como MQTT, Websockets, etc, si hiciese falta. Traductores de los mensajes de entrada y generador de los de salida. En principio podemos tomar como ejemplo el de las tramas que tenemos. Est\u00e1 abierto a ser ampliado. Operaciones con los datos de entrada y de salida. Esto ya ser\u00eda una capa que tendr\u00eda que modificarse para cada respirador. Interfaz visual para mostrar datos y obtener modificaciones de par\u00e1metros. Tip Dentro de cada fichero python, se ha a\u00f1adido (y debes de a\u00f1adir) la siguiente cabecera para ayudar a cumplir las normas del PEP8 . Por un lado tienes el orden en el que deben de ir los imports. Por otro tienes una referencia de como de larga puedes ser las l\u00edneas. Recuerda que cada l\u00ednea no puede contener m\u00e1s de 80 caracteres . # Built-in -------------------------------------------------------------------- # Installed ------------------------------------------------------------------- # Coded ----------------------------------------------------------------------- # Program --------------------------------------------------------------------- Cada import que hagas, m\u00e9telo debajo de cada comentario correspondiente, como en el siguiente ejemplo: # Built-in -------------------------------------------------------------------- import logging from time import time , sleep # Installed ------------------------------------------------------------------- import serial from serial.tools.list_ports import comports # Coded ----------------------------------------------------------------------- import mimodulo from mimodulo import miscript # Program ---------------------------------------------------------------------","title":"Programa"},{"location":"respyrator/programa/#estructura-del-programa","text":"El c\u00f3digo fuente se ha puesto dentro de la carpeta src . As\u00ed es directo saber donde est\u00e1 codigo fuente a nivel de repo, no generando ansias de estar cambiando el nombre del programa y evitando tener problemas con los imports (no hace falta refactorizar los imports). Funci\u00f3n Fichero-Carpeta Explicaci\u00f3n Configuraci\u00f3n configurarion.ini Fichero con la configuraci\u00f3n settings.py Lee la configuraci\u00f3n del fichero anterior. Genera las constantes - objectos globales para cada parte del proyecto Comunicaci\u00f3n Serie sercomm M\u00f3dulo encargado de la comunicaci\u00f3n serie Interfaz Gr\u00e1fica gui M\u00f3dulo con el frontend del programa TODO: ir a\u00f1adiendo lo que falte","title":"Estructura del programa"},{"location":"respyrator/programa/#logs","text":"Para poder tener un control de lo que ocurre en el programa se usan los llamados logs. Son mensajes que se pueden ver por la consola o ir almacenando en ficheros. En este caso se ha optado en que se autogenere una carpeta log a nivel de repositorio, es decir, fuera de la carpeta src . Los objetos dentro del programa encargados de generar estos logs se llaman loggers , y se encuentran definidos en el settings.py . Se han creado 2: logapp : Este es el logger principal que se usa para el programa. Manda su informaci\u00f3n, tanto por consola, como a un fichero de logs. logmcu : Este logger es secundario, y sirve para poder controlar que ocurre en el respirador. Hay MCUs que poseen varios puertos serial, como la placa Arduino Mega que tiene tres. As\u00ed, si se quiere, se puede tener un control de lo que ocurre en el respirador a nivel interno.","title":"Logs"},{"location":"respyrator/repositorio/","text":"Repositorio \u00b6 El proyecto est\u00e1 dentro de un repositorio, as\u00ed que es necesario que sepas como est\u00e1 estructurado antes de que sigas. Funci\u00f3n Fichero - Carpeta Explicaci\u00f3n Programa src/ C\u00f3digo fuente test/ Tests del programa .travis.yml Para el CI del programa y tambi\u00e9n generar la documentaci\u00f3n en la rama gh-pages log Esta carpeta se autogenera para almacenar los logs del programa Documentaci\u00f3n mkdocs.yml Configuraci\u00f3n e \u00edndice docs/ Ficheros y recursos de la documentaci\u00f3n readthedocs.yml Fichero para despliegue de documentaci\u00f3n en readthedocs.org Respirador HW firmware/ C\u00f3digo para hacer pruebas con el HW Entorno virtual Pipfile Fichero para instalar el programa Pipfile.lock Fichero de seguridad requirements.txt No usar (deprecado) requirements-dev.txt No usar (deprecado) Repositorio README.md Informaci\u00f3n e instrucciones del repositorio LICENSE Licencia del programa CONTRIBUTING.md Informaci\u00f3n sobre como colaborar .gitignore Fichero para indicar que ficheros-carpertas no incluir en el repo","title":"Repositorio"},{"location":"respyrator/repositorio/#repositorio","text":"El proyecto est\u00e1 dentro de un repositorio, as\u00ed que es necesario que sepas como est\u00e1 estructurado antes de que sigas. Funci\u00f3n Fichero - Carpeta Explicaci\u00f3n Programa src/ C\u00f3digo fuente test/ Tests del programa .travis.yml Para el CI del programa y tambi\u00e9n generar la documentaci\u00f3n en la rama gh-pages log Esta carpeta se autogenera para almacenar los logs del programa Documentaci\u00f3n mkdocs.yml Configuraci\u00f3n e \u00edndice docs/ Ficheros y recursos de la documentaci\u00f3n readthedocs.yml Fichero para despliegue de documentaci\u00f3n en readthedocs.org Respirador HW firmware/ C\u00f3digo para hacer pruebas con el HW Entorno virtual Pipfile Fichero para instalar el programa Pipfile.lock Fichero de seguridad requirements.txt No usar (deprecado) requirements-dev.txt No usar (deprecado) Repositorio README.md Informaci\u00f3n e instrucciones del repositorio LICENSE Licencia del programa CONTRIBUTING.md Informaci\u00f3n sobre como colaborar .gitignore Fichero para indicar que ficheros-carpertas no incluir en el repo","title":"Repositorio"},{"location":"respyrator/requisitos/","text":"Requisitos \u00b6 Los requisitos del proyecto son un documento vivo que se encuentra -> en este enlace Todo lo que viene m\u00e1s adelante es un resumen un poco m\u00e1s ordenado, pero que puede estar desactualizado respecto al oficial. Respirador asistido, que es y como funciona \u00b6 Un respirador es una m\u00e1quina que ayuda a respirar a un paciente de manera controlada. Consiste en un tubo que se introduce por la garganta hasta la traquea. Por este tubo se bombea aire y tambi\u00e9n se extrae el CO _2 _2 . Hay diferentes modos de ventilzaci\u00f3n: esperar que el paciente pida aire, hacerlo programado, etc. Su configuraci\u00f3n, as\u00ed como su control, suele estar a cargo de l@s anestesistas y/o intensivistas en los quir\u00f3fanos. O tambi\u00e9n puede ser manipulado por enfermer@s en la zona de rehabilitaci\u00f3n. Antes de saber avanzar m\u00e1s, te recomiendo que leas esta p\u00e1gina donde se explican los distintos par\u00e1metros y modos de un respirador. Proyecto \u00b6 El proyecto consiste en desarrollar realizar toda la parte software de adquisici\u00f3n y visualizaci\u00f3n de datos, as\u00ed como configuraci\u00f3n de un respirador autom\u00e1tico Open Source desarrollado por la comunidad maker junto con la HUCA. Todo esto va sobre un pc comunicado con el respirador a trav\u00e9s de una conexi\u00f3n USB (serial). El respirador consiste en: Una MCU basada en un Arduino Mega. Comunicaci\u00f3n con sensores a trav\u00e9s de SPI. Conexi\u00f3n serie (USB) a trav\u00e9s del Serial (Serial0) del Mega para poder mandar y recibir datos. Un display LCD conectado por I2C con el que se interacciona por ahora y que se puede dejar a modo de informaci\u00f3n redundante. Se debe de desarrollar: Lectura datos por la conexi\u00f3n serial. Crear un dashboard con los datos de los par\u00e1metros, as\u00ed como la informaci\u00f3n del paciente. Poder modificar par\u00e1metros a trav\u00e9s del interfaz gr\u00e1fico. Mandar par\u00e1metros por la conexi\u00f3n serial. Conexi\u00f3n Serie \u00b6 La conexi\u00f3n serie se hace siguendo los par\u00e1metros, 115200/8-N-1, es decir: Baud rate 115200 Byte size 8 Parity None Stopbits 1 El respirador manda datos de lectura de los sensores, y tambi\u00e9n se le pueden mandar datos poder cambiar la configuracion: Leer datos del respirador Mandar datos al respirador Visualizaci\u00f3n de datos \u00b6 TODO:","title":"Requisitos"},{"location":"respyrator/requisitos/#requisitos","text":"Los requisitos del proyecto son un documento vivo que se encuentra -> en este enlace Todo lo que viene m\u00e1s adelante es un resumen un poco m\u00e1s ordenado, pero que puede estar desactualizado respecto al oficial.","title":"Requisitos"},{"location":"respyrator/requisitos/#respirador-asistido-que-es-y-como-funciona","text":"Un respirador es una m\u00e1quina que ayuda a respirar a un paciente de manera controlada. Consiste en un tubo que se introduce por la garganta hasta la traquea. Por este tubo se bombea aire y tambi\u00e9n se extrae el CO _2 _2 . Hay diferentes modos de ventilzaci\u00f3n: esperar que el paciente pida aire, hacerlo programado, etc. Su configuraci\u00f3n, as\u00ed como su control, suele estar a cargo de l@s anestesistas y/o intensivistas en los quir\u00f3fanos. O tambi\u00e9n puede ser manipulado por enfermer@s en la zona de rehabilitaci\u00f3n. Antes de saber avanzar m\u00e1s, te recomiendo que leas esta p\u00e1gina donde se explican los distintos par\u00e1metros y modos de un respirador.","title":"Respirador asistido, que es y como funciona"},{"location":"respyrator/requisitos/#proyecto","text":"El proyecto consiste en desarrollar realizar toda la parte software de adquisici\u00f3n y visualizaci\u00f3n de datos, as\u00ed como configuraci\u00f3n de un respirador autom\u00e1tico Open Source desarrollado por la comunidad maker junto con la HUCA. Todo esto va sobre un pc comunicado con el respirador a trav\u00e9s de una conexi\u00f3n USB (serial). El respirador consiste en: Una MCU basada en un Arduino Mega. Comunicaci\u00f3n con sensores a trav\u00e9s de SPI. Conexi\u00f3n serie (USB) a trav\u00e9s del Serial (Serial0) del Mega para poder mandar y recibir datos. Un display LCD conectado por I2C con el que se interacciona por ahora y que se puede dejar a modo de informaci\u00f3n redundante. Se debe de desarrollar: Lectura datos por la conexi\u00f3n serial. Crear un dashboard con los datos de los par\u00e1metros, as\u00ed como la informaci\u00f3n del paciente. Poder modificar par\u00e1metros a trav\u00e9s del interfaz gr\u00e1fico. Mandar par\u00e1metros por la conexi\u00f3n serial.","title":"Proyecto"},{"location":"respyrator/requisitos/#conexion-serie","text":"La conexi\u00f3n serie se hace siguendo los par\u00e1metros, 115200/8-N-1, es decir: Baud rate 115200 Byte size 8 Parity None Stopbits 1 El respirador manda datos de lectura de los sensores, y tambi\u00e9n se le pueden mandar datos poder cambiar la configuracion: Leer datos del respirador Mandar datos al respirador","title":"Conexi\u00f3n Serie"},{"location":"respyrator/requisitos/#visualizacion-de-datos","text":"TODO:","title":"Visualizaci\u00f3n de datos"},{"location":"respyrator/respyrator/","text":"","title":"Respyrator"},{"location":"respyrator/rx/","text":"Enviar comandos \u00b6 Para modificar par\u00e1metros del respirador, hay que enviar una trama con el siguiente formato: Campo Direcci\u00f3n (byte) Tama\u00f1o (bits) Uso, Valores, Comentarios Header 0x00 8 0x55 Protocol Version 0x01 8 0x10: v1.0 Frame Number 0x02 8 Incremental counter, to keep track of answers and ACK. Command 003 8 0x01: stRPM 0x02: setPeakPressure 003: setPeepPressure 0x04: setTriggerFlow 0x05: setRamp 0x11: setAlarmVolumeLowbr>0x12: setAlarmVolumeHigh x13: setAlarmRPMLow 0x14: setAarmRPMHigh 0x15:setAlarmPeakPressureLowbr>0x16: setAlarmPeakPressueHigh 0x17: setAlarmPeepPressurLow 0x18: setAlarmPeepPressreHigh 0x19: setAlarBatteryLow 0x1: getAlarmVolumeLow 0x22: getAlarmVolumeHigh x23: getAlarmRPMLow 0x24: getAarmRPMHigh 0x25:getAlarmPeakPressureLowbr>0x26: getAlarmPeakPressueHigh 0x27: getAlarmPeepPressureLow 0x28: getAlarmPeepPressureHigh 0x29: getAlarmBatteryLow 0x50: getFimwareVersion Value (High Byte) 0x04 8 Value (High Byte) Value (Low Byte) 0x05 8 Value (Low Byte) CRC 0x06 0x07 8 (high) 8 (low) Frame CRC","title":"Enviar comandos"},{"location":"respyrator/rx/#enviar-comandos","text":"Para modificar par\u00e1metros del respirador, hay que enviar una trama con el siguiente formato: Campo Direcci\u00f3n (byte) Tama\u00f1o (bits) Uso, Valores, Comentarios Header 0x00 8 0x55 Protocol Version 0x01 8 0x10: v1.0 Frame Number 0x02 8 Incremental counter, to keep track of answers and ACK. Command 003 8 0x01: stRPM 0x02: setPeakPressure 003: setPeepPressure 0x04: setTriggerFlow 0x05: setRamp 0x11: setAlarmVolumeLowbr>0x12: setAlarmVolumeHigh x13: setAlarmRPMLow 0x14: setAarmRPMHigh 0x15:setAlarmPeakPressureLowbr>0x16: setAlarmPeakPressueHigh 0x17: setAlarmPeepPressurLow 0x18: setAlarmPeepPressreHigh 0x19: setAlarBatteryLow 0x1: getAlarmVolumeLow 0x22: getAlarmVolumeHigh x23: getAlarmRPMLow 0x24: getAarmRPMHigh 0x25:getAlarmPeakPressureLowbr>0x26: getAlarmPeakPressueHigh 0x27: getAlarmPeepPressureLow 0x28: getAlarmPeepPressureHigh 0x29: getAlarmBatteryLow 0x50: getFimwareVersion Value (High Byte) 0x04 8 Value (High Byte) Value (Low Byte) 0x05 8 Value (Low Byte) CRC 0x06 0x07 8 (high) 8 (low) Frame CRC","title":"Enviar comandos"},{"location":"respyrator/tx/","text":"Leer datos del respirador \u00b6 El respirador manda una trama estructurada de la siguiente manera: Campo Direcci\u00f3n (byte) Tama\u00f1o (bits) Uso, Valores, Comentarios Header 0x00 8 0x44 Protocol Version 0x01 8 0x10: v1.0 UUID 0x02 8 (high) 8 (low) Tag/Free use SN 0x06 8 (high) 8 (low) RPM Setting 0x0A 0x0B 8 (high) 8 (low) RPM Measure 0x0C 0x0D 8 (high) 8 (low) PeakPresure setting 0x0E 0x0F 8 (high) 8 (low) PeakPreasure measure 0x10 0x11 8 (high) 8 (low) PeepPresure setting 0x12 0x12 8 (high) 8 (low) PeepPreasure measure 0x14 0x15 8 (high) 8 (low) TriggerFlow setting 0x16 0x17 8 (high) 8 (low) Flow measure 0x18 0x19 8 (high) 8 (low) Ramp setting 0x1A 0x1B 8 (high) 8 (low) ActiveAlarmCode 0x1C 8 0x00: noAlarmActive 0x01: alarmVolumeLow 0x02: alarmVolumeHigh 0x03: alarmRPMLow 0x04: alarmRPMHigh 0x05: alarmPeakPressureLow 0x06: alarmPeakPressureHigh 0x07: alarmPeepPressureLow 0x08: alarmPeepPressureHigh 0x09: alarmBatteryLow If more than one alarm present, they alternate with 1 sec. cycle Status Bit Field 0x1D 8 b0: currCycleWasTriggered b1: lastCycleWasTriggered b2: edditingEnc1 (show tempValueEnc1) b3: edditingEnc2 (show tempValueEnc2) b4: edditingEnc3 (show tempValueEnc3) b5: edditingEnc4 (show tempValueEnc4) b6: ACK b7: NACK If this frames contains no answer, b6 and b7 are 0. tempValueEnc1 0x1E 0x1F 8 (high) 8 (low) Value to be shown during edition tempValueEnc2 0x20 0x21 8 (high) 8 (low) Value to be shown during edition tempValueEnc3 0x22 0x23 8 (high) 8 (low) Value to be shown during edition tempValueEnc4 0x24 0x25 8 (high) 8 (low) Value to be shown during edition Answer 0x26 0x27 8 (high) 8 (low) Requested Value Answer to Frame Number 0x28 8 Incremental counter, to keep track of answers and ACK. CRC16 0x29 8 (high) 8 (low) Frame CRC16","title":"Leer datos del respirador"},{"location":"respyrator/tx/#leer-datos-del-respirador","text":"El respirador manda una trama estructurada de la siguiente manera: Campo Direcci\u00f3n (byte) Tama\u00f1o (bits) Uso, Valores, Comentarios Header 0x00 8 0x44 Protocol Version 0x01 8 0x10: v1.0 UUID 0x02 8 (high) 8 (low) Tag/Free use SN 0x06 8 (high) 8 (low) RPM Setting 0x0A 0x0B 8 (high) 8 (low) RPM Measure 0x0C 0x0D 8 (high) 8 (low) PeakPresure setting 0x0E 0x0F 8 (high) 8 (low) PeakPreasure measure 0x10 0x11 8 (high) 8 (low) PeepPresure setting 0x12 0x12 8 (high) 8 (low) PeepPreasure measure 0x14 0x15 8 (high) 8 (low) TriggerFlow setting 0x16 0x17 8 (high) 8 (low) Flow measure 0x18 0x19 8 (high) 8 (low) Ramp setting 0x1A 0x1B 8 (high) 8 (low) ActiveAlarmCode 0x1C 8 0x00: noAlarmActive 0x01: alarmVolumeLow 0x02: alarmVolumeHigh 0x03: alarmRPMLow 0x04: alarmRPMHigh 0x05: alarmPeakPressureLow 0x06: alarmPeakPressureHigh 0x07: alarmPeepPressureLow 0x08: alarmPeepPressureHigh 0x09: alarmBatteryLow If more than one alarm present, they alternate with 1 sec. cycle Status Bit Field 0x1D 8 b0: currCycleWasTriggered b1: lastCycleWasTriggered b2: edditingEnc1 (show tempValueEnc1) b3: edditingEnc2 (show tempValueEnc2) b4: edditingEnc3 (show tempValueEnc3) b5: edditingEnc4 (show tempValueEnc4) b6: ACK b7: NACK If this frames contains no answer, b6 and b7 are 0. tempValueEnc1 0x1E 0x1F 8 (high) 8 (low) Value to be shown during edition tempValueEnc2 0x20 0x21 8 (high) 8 (low) Value to be shown during edition tempValueEnc3 0x22 0x23 8 (high) 8 (low) Value to be shown during edition tempValueEnc4 0x24 0x25 8 (high) 8 (low) Value to be shown during edition Answer 0x26 0x27 8 (high) 8 (low) Requested Value Answer to Frame Number 0x28 8 Incremental counter, to keep track of answers and ACK. CRC16 0x29 8 (high) 8 (low) Frame CRC16","title":"Leer datos del respirador"},{"location":"uso/instalacion/","text":"Instalaci\u00f3n \u00b6 El proyecto se ha hecho en Python 3.8. De todas formas, es probable que para Python 3.6 y 3.7 pueda funcionar aunque no se garantiza. Instalar con Python 3.8 \u00b6 Es necesario tener instalado el paquete pipenv y ejecutar en la terminal: pipenv install Si se es desarrollad@r, se recomienda instalar las dependencias de desarrollo con pipenv install -- dev Instalar con Python 3.6 / 3.7 \u00b6 Para instalar usar pip pip install -r requirements.txt Si se desea instalar tambi\u00e9n las dependencias de desarrollo ejecutar pip install -r requirements-dev.txt","title":"Instalacion"},{"location":"uso/instalacion/#instalacion","text":"El proyecto se ha hecho en Python 3.8. De todas formas, es probable que para Python 3.6 y 3.7 pueda funcionar aunque no se garantiza.","title":"Instalaci\u00f3n"},{"location":"uso/instalacion/#instalar-con-python-38","text":"Es necesario tener instalado el paquete pipenv y ejecutar en la terminal: pipenv install Si se es desarrollad@r, se recomienda instalar las dependencias de desarrollo con pipenv install -- dev","title":"Instalar con Python 3.8"},{"location":"uso/instalacion/#instalar-con-python-36-37","text":"Para instalar usar pip pip install -r requirements.txt Si se desea instalar tambi\u00e9n las dependencias de desarrollo ejecutar pip install -r requirements-dev.txt","title":"Instalar con Python 3.6 / 3.7"},{"location":"uso/uso/","text":"","title":"Uso"},{"location":"ventilador/configuraciones/","text":"Configuraciones \u00b6 En cada modo hay que hacer una configuraci\u00f3n que consiste en: Control: Par\u00e1metros de control y sus valores. Alarmas: Par\u00e1metros de alarma y sus valores. Modalidades Controladas o Mandatorias Controlado por Presi\u00f3n Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + P _{insp} _{insp} Alarmas: V _T _T Controlado por Volumen Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + V _T _T Alarmas: P _{pk} _{pk} + P _{plt} _{plt} + Csr Modalidades Asistidas o Sincronizadas Controlado por Presi\u00f3n Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + P _{insp} _{insp} + trigger (presi\u00f3n) + ramp Alarmas: V _T _T Controlado por Volumen Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + V _T _T + trigger (flujo) + ramp Alarmas: P _{pk} _{pk} + P _{plt} _{plt} + Csr Modalidad Soporte Controlada por Presi\u00f3n Control: PEEP + Presi\u00f3n soporte Alarmas: FR + F _{insp} _{insp} Modalidad Espont\u00e1nea Control: PEEP + FiO _2 _2 Alarmas: falta","title":"Configuraciones"},{"location":"ventilador/configuraciones/#configuraciones","text":"En cada modo hay que hacer una configuraci\u00f3n que consiste en: Control: Par\u00e1metros de control y sus valores. Alarmas: Par\u00e1metros de alarma y sus valores. Modalidades Controladas o Mandatorias Controlado por Presi\u00f3n Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + P _{insp} _{insp} Alarmas: V _T _T Controlado por Volumen Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + V _T _T Alarmas: P _{pk} _{pk} + P _{plt} _{plt} + Csr Modalidades Asistidas o Sincronizadas Controlado por Presi\u00f3n Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + P _{insp} _{insp} + trigger (presi\u00f3n) + ramp Alarmas: V _T _T Controlado por Volumen Control: PEEP + FR + T _{insp} _{insp} + I:E + FiO _2 _2 + V _T _T + trigger (flujo) + ramp Alarmas: P _{pk} _{pk} + P _{plt} _{plt} + Csr Modalidad Soporte Controlada por Presi\u00f3n Control: PEEP + Presi\u00f3n soporte Alarmas: FR + F _{insp} _{insp} Modalidad Espont\u00e1nea Control: PEEP + FiO _2 _2 Alarmas: falta","title":"Configuraciones"},{"location":"ventilador/funcionamiento/","text":"Como funciona \u00b6 El usuario del ventilador es un sanitario: Anestesista (en Quir\u00f3fano o Reanimaci\u00f3n) Intensivita (en UCI) En algunos casos, tambi\u00e9n personal de enfermer\u00eda formado. El esquema de funcionamiento m\u00e1s elemental de como un usuario trabaja con un ventilador es el siguiente: Funcionamiento desde el punto de vista del usuario Seleccionar el modo ventilatorio. Configurar los par\u00e1metros de ese modo. Configurar los par\u00e1metros para las alarmas. Monitorizar los par\u00e1metros. En resumen, el usuario necesita seleccionar un modo, configurar sus par\u00e1metros e ir viendo los cambios de los otros par\u00e1metros. Si algo no funciona como se espera, debe de saltar una alarma.","title":"Como funciona"},{"location":"ventilador/funcionamiento/#como-funciona","text":"El usuario del ventilador es un sanitario: Anestesista (en Quir\u00f3fano o Reanimaci\u00f3n) Intensivita (en UCI) En algunos casos, tambi\u00e9n personal de enfermer\u00eda formado. El esquema de funcionamiento m\u00e1s elemental de como un usuario trabaja con un ventilador es el siguiente: Funcionamiento desde el punto de vista del usuario Seleccionar el modo ventilatorio. Configurar los par\u00e1metros de ese modo. Configurar los par\u00e1metros para las alarmas. Monitorizar los par\u00e1metros. En resumen, el usuario necesita seleccionar un modo, configurar sus par\u00e1metros e ir viendo los cambios de los otros par\u00e1metros. Si algo no funciona como se espera, debe de saltar una alarma.","title":"Como funciona"},{"location":"ventilador/graficas/","text":"Gr\u00e1ficas \u00b6 Para monitorizar al paciente, la manera m\u00e1s r\u00e1pida de ver su comportamiento es a trav\u00e9s de gr\u00e1ficas. B\u00e1sicamente se usan tres gr\u00e1ficas, aunque solo las dos primeras son indispensables: Presi\u00f3n. Flujo. Volumen. Estas gr\u00e1ficas var\u00edan sobre todo si el modo es controlado por presi\u00f3n o por volumen. Aqu\u00ed se puede ver un ejemplo de las gr\u00e1ficas de lo que decimos.","title":"Gr\u00e1ficas"},{"location":"ventilador/graficas/#graficas","text":"Para monitorizar al paciente, la manera m\u00e1s r\u00e1pida de ver su comportamiento es a trav\u00e9s de gr\u00e1ficas. B\u00e1sicamente se usan tres gr\u00e1ficas, aunque solo las dos primeras son indispensables: Presi\u00f3n. Flujo. Volumen. Estas gr\u00e1ficas var\u00edan sobre todo si el modo es controlado por presi\u00f3n o por volumen. Aqu\u00ed se puede ver un ejemplo de las gr\u00e1ficas de lo que decimos.","title":"Gr\u00e1ficas"},{"location":"ventilador/modos/","text":"Modos ventilatorios \u00b6 Estos modos se generan a partir de dos dimensiones: ventilaciones y tipo de control. Ventilaciones \u00b6 Existen 4 tipos de ventilaciones. Ventilaci\u00f3n Funcionamiento Controlada o Mandatoria - El ventilador es activo. - Funciona de manera fija sin tener en cuenta al paciente. - Manda el ventilador. - Estos modos son t\u00edpicos de ventiladores quiz\u00e1s m\u00e1s antig\u00fcos o rudimentarios. Asistida o Sincronizada - El ventilador es reactivo. - Funciona como en la ventilaci\u00f3n control, manda el ventilador, pero tiene un feedback por parte del paciente para iniciarse. - Son los m\u00e1s us\u00e1dos para pacientes sedados. Soporte - El ventilador es supervisor. - Ahora manda el paciente, pero el ventilador supervisa que su ventilaci\u00f3n llegue a unos m\u00ednimos criterios de calidad. Espont\u00e1nea - El ventilador es pasivo. - El paciente respira por si solo, pero el aire en vez de venir del ambiente, viene directamente del ventilador. - B\u00e1sicamente se controla la calidad del aire y poco m\u00e1s. Tipos de Control \u00b6 El control se refiere a tener una magnitud / par\u00e1metro / criterio que se debe de mantener constante. En este caso solo existen dos: Control por Presi\u00f3n Control por Volumen Modos \u00b6 Uno de los mayores problemas encontrados es que cada fabricante llama a cada modo de una forma distinta. Es probable que incluso por cada ventilador pueda ofrecer distintos sub-modos dentro de alg\u00fan modo. Este proyecto se va a centrar solo los modos principales, nombrandolos por su definici\u00f3n ventilaci\u00f3n-control , en lugar de por un nombre que acabe llevando a confusi\u00f3n. La combinaci\u00f3n ventilaci\u00f3n-control da como resultado 8 modos. En la realidad solo hay 6 modos: Cuando la ventilaci\u00f3n es espont\u00e1nea el control no influye, luego esos dos 2 se fusionan en 1. En la ventilaci\u00f3n soporte el control por volumen no se usa. En cada modo hay que configurar los par\u00e1metros de control y los par\u00e1metros que puedan dar alarma.","title":"Modos ventilatorios"},{"location":"ventilador/modos/#modos-ventilatorios","text":"Estos modos se generan a partir de dos dimensiones: ventilaciones y tipo de control.","title":"Modos ventilatorios"},{"location":"ventilador/modos/#ventilaciones","text":"Existen 4 tipos de ventilaciones. Ventilaci\u00f3n Funcionamiento Controlada o Mandatoria - El ventilador es activo. - Funciona de manera fija sin tener en cuenta al paciente. - Manda el ventilador. - Estos modos son t\u00edpicos de ventiladores quiz\u00e1s m\u00e1s antig\u00fcos o rudimentarios. Asistida o Sincronizada - El ventilador es reactivo. - Funciona como en la ventilaci\u00f3n control, manda el ventilador, pero tiene un feedback por parte del paciente para iniciarse. - Son los m\u00e1s us\u00e1dos para pacientes sedados. Soporte - El ventilador es supervisor. - Ahora manda el paciente, pero el ventilador supervisa que su ventilaci\u00f3n llegue a unos m\u00ednimos criterios de calidad. Espont\u00e1nea - El ventilador es pasivo. - El paciente respira por si solo, pero el aire en vez de venir del ambiente, viene directamente del ventilador. - B\u00e1sicamente se controla la calidad del aire y poco m\u00e1s.","title":"Ventilaciones"},{"location":"ventilador/modos/#tipos-de-control","text":"El control se refiere a tener una magnitud / par\u00e1metro / criterio que se debe de mantener constante. En este caso solo existen dos: Control por Presi\u00f3n Control por Volumen","title":"Tipos de Control"},{"location":"ventilador/modos/#modos","text":"Uno de los mayores problemas encontrados es que cada fabricante llama a cada modo de una forma distinta. Es probable que incluso por cada ventilador pueda ofrecer distintos sub-modos dentro de alg\u00fan modo. Este proyecto se va a centrar solo los modos principales, nombrandolos por su definici\u00f3n ventilaci\u00f3n-control , en lugar de por un nombre que acabe llevando a confusi\u00f3n. La combinaci\u00f3n ventilaci\u00f3n-control da como resultado 8 modos. En la realidad solo hay 6 modos: Cuando la ventilaci\u00f3n es espont\u00e1nea el control no influye, luego esos dos 2 se fusionan en 1. En la ventilaci\u00f3n soporte el control por volumen no se usa. En cada modo hay que configurar los par\u00e1metros de control y los par\u00e1metros que puedan dar alarma.","title":"Modos"},{"location":"ventilador/ventilador/","text":"Que es un Ventilador Mec\u00e1nico \u00b6 La respiraci\u00f3n es un proceso que empieza y acaba en los alv\u00e9olos. Respiraci\u00f3n El alv\u00e9olo filtra el O _2 _2 del aire. Se propaga el ox\u00edgeno a las c\u00e9lulas a trav\u00e9s del torrente sangu\u00edneo. Se recoge de estas el CO _2 _2 generado. El alv\u00e9olo expulsa el di\u00f3xido de carb\u00f3no. Al proceso de bombear aire a los pulmones y extraerlo, se le llama ventilar. As\u00ed que las m\u00e1quinas encargadas de la ventilaci\u00f3n de los pacientes se les llama Ventiladores Mec\u00e1nicos, no Respiradores. Los ventiladores se pueden dividir en dos tipos: Tipos En que consiste No invasivos - No entran dentro del cuerpo. - Se usan en forma de mascarilla facial u oronasal. Invasivos - Entran dentro del cuerpo. - Consisten en un tubo que llega dentro de la tr\u00e1quea para poder insuflar aire directamente a los pulmones. Respyrator Respyrator est\u00e1 centrado en ventiladores mec\u00e1nicos invasivos . A ra\u00edz de la crisis del Covid-19, la necesidad de ventiladores mec\u00e1nicos en los hospitales de todo mundo se ha hecho patente. Su coste es bastante elevado y los fabricantes de estos no suelen ser muchos.","title":"Que es un Ventilador Mec\u00e1nico"},{"location":"ventilador/ventilador/#que-es-un-ventilador-mecanico","text":"La respiraci\u00f3n es un proceso que empieza y acaba en los alv\u00e9olos. Respiraci\u00f3n El alv\u00e9olo filtra el O _2 _2 del aire. Se propaga el ox\u00edgeno a las c\u00e9lulas a trav\u00e9s del torrente sangu\u00edneo. Se recoge de estas el CO _2 _2 generado. El alv\u00e9olo expulsa el di\u00f3xido de carb\u00f3no. Al proceso de bombear aire a los pulmones y extraerlo, se le llama ventilar. As\u00ed que las m\u00e1quinas encargadas de la ventilaci\u00f3n de los pacientes se les llama Ventiladores Mec\u00e1nicos, no Respiradores. Los ventiladores se pueden dividir en dos tipos: Tipos En que consiste No invasivos - No entran dentro del cuerpo. - Se usan en forma de mascarilla facial u oronasal. Invasivos - Entran dentro del cuerpo. - Consisten en un tubo que llega dentro de la tr\u00e1quea para poder insuflar aire directamente a los pulmones. Respyrator Respyrator est\u00e1 centrado en ventiladores mec\u00e1nicos invasivos . A ra\u00edz de la crisis del Covid-19, la necesidad de ventiladores mec\u00e1nicos en los hospitales de todo mundo se ha hecho patente. Su coste es bastante elevado y los fabricantes de estos no suelen ser muchos.","title":"Que es un Ventilador Mec\u00e1nico"},{"location":"ventilador/parametros/asistida/","text":"Par\u00e1metros de Ventilaci\u00f3n Asistida \u00b6 En la ventilaci\u00f3n asistida se tiene un mecanismo de feedback o sincron\u00eda con el paciente. El ventilador funciona seg\u00fan su configuraci\u00f3n, pero tiene esta informaci\u00f3n para iniciar la inspiraci\u00f3n. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Trigger de presi\u00f3n trigger cmH _2 _2 O -2.0 -3.0 -0.5 0.1 Trigger de flujo trigger L/min -2.0 -4.0 -0.2 0.1 Rampa ramp mseg 50 0 200 50 Triggers \u00b6 Existen 3 triggers En realidad existen 3 triggers: presi\u00f3n, flujo y tiempo . Pero este \u00faltimo se fija con FR-T _{insp} _{insp} en las ventilaciones control y asistida. Su siglas son trigger . El feedback del paciente se puede recoger a trav\u00e9s de la presi\u00f3n o del flujo. Este par\u00e1metro es la sensibilidad de ese feedback para que se dispare (inicie) el ciclo respiratorio. Es un valor negativo, ya que es el paciente el que est\u00e1 haciendo un esfuerzo respiratorio para iniciar la inspiraci\u00f3n. El trigger no manda sobre los otros par\u00e1metros Es probable que a veces no se llegue al valor del trigger para dispararse. O que se haga, pero eso incumpla alg\u00fan par\u00e1metro como la FR. En esos casos, es el ventilador el que regula. El trigger es solo una ayuda para hacer mas natural la ventilaci\u00f3n, pero si el paciente \"falla\", el ventilador prioriza sus par\u00e1metros (como la FR) antes que el trigger. Rampa \u00b6 Su siglas son ramp . Es el tiempo que va a tardar en introducirse el aire \"de manera efectiva\" en el paciente. Es decir, cuando tiempo tarda en obtener un valor positivo en presi\u00f3n-flujo-volumen .","title":"Ventilaci\u00f3n Asistida"},{"location":"ventilador/parametros/asistida/#parametros-de-ventilacion-asistida","text":"En la ventilaci\u00f3n asistida se tiene un mecanismo de feedback o sincron\u00eda con el paciente. El ventilador funciona seg\u00fan su configuraci\u00f3n, pero tiene esta informaci\u00f3n para iniciar la inspiraci\u00f3n. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Trigger de presi\u00f3n trigger cmH _2 _2 O -2.0 -3.0 -0.5 0.1 Trigger de flujo trigger L/min -2.0 -4.0 -0.2 0.1 Rampa ramp mseg 50 0 200 50","title":"Par\u00e1metros de Ventilaci\u00f3n Asistida"},{"location":"ventilador/parametros/asistida/#triggers","text":"Existen 3 triggers En realidad existen 3 triggers: presi\u00f3n, flujo y tiempo . Pero este \u00faltimo se fija con FR-T _{insp} _{insp} en las ventilaciones control y asistida. Su siglas son trigger . El feedback del paciente se puede recoger a trav\u00e9s de la presi\u00f3n o del flujo. Este par\u00e1metro es la sensibilidad de ese feedback para que se dispare (inicie) el ciclo respiratorio. Es un valor negativo, ya que es el paciente el que est\u00e1 haciendo un esfuerzo respiratorio para iniciar la inspiraci\u00f3n. El trigger no manda sobre los otros par\u00e1metros Es probable que a veces no se llegue al valor del trigger para dispararse. O que se haga, pero eso incumpla alg\u00fan par\u00e1metro como la FR. En esos casos, es el ventilador el que regula. El trigger es solo una ayuda para hacer mas natural la ventilaci\u00f3n, pero si el paciente \"falla\", el ventilador prioriza sus par\u00e1metros (como la FR) antes que el trigger.","title":"Triggers"},{"location":"ventilador/parametros/asistida/#rampa","text":"Su siglas son ramp . Es el tiempo que va a tardar en introducirse el aire \"de manera efectiva\" en el paciente. Es decir, cuando tiempo tarda en obtener un valor positivo en presi\u00f3n-flujo-volumen .","title":"Rampa"},{"location":"ventilador/parametros/oxigeno/","text":"Par\u00e1metros de Ox\u00edgeno \u00b6 En realidad es un solo par\u00e1metro, solo que se puede usar de dos maneras, en fracci\u00f3n o porcentaje. Tiene que ver con la proporci\u00f3n de ox\u00edgeno que va en el aire insuflado al paciente. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Fracci\u00f3n inspiratorio de Ox\u00edgeno FiO _2 _2 0.50 0.21 1.00 0.01 - 0.05 Concentraci\u00f3n de Ox\u00edgeno O _2 _2 % % 50 21 100 1 - 5 Usar FiO _2 _2 Se suele usar m\u00e1s FiO _2 _2 en lugar de O _2 _2 %. Concentraci\u00f3n de Ox\u00edgeno \u00b6 Su siglas son O _2 _2 % . Se mide en porcentaje, de 0 a 100 %. Fracci\u00f3n inspiratorio de Ox\u00edgeno \u00b6 Su siglas son FiO _2 _2 . Se mide en fracci\u00f3n, de 0.0. a 1.00.","title":"Ox\u00edgeno"},{"location":"ventilador/parametros/oxigeno/#parametros-de-oxigeno","text":"En realidad es un solo par\u00e1metro, solo que se puede usar de dos maneras, en fracci\u00f3n o porcentaje. Tiene que ver con la proporci\u00f3n de ox\u00edgeno que va en el aire insuflado al paciente. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Fracci\u00f3n inspiratorio de Ox\u00edgeno FiO _2 _2 0.50 0.21 1.00 0.01 - 0.05 Concentraci\u00f3n de Ox\u00edgeno O _2 _2 % % 50 21 100 1 - 5 Usar FiO _2 _2 Se suele usar m\u00e1s FiO _2 _2 en lugar de O _2 _2 %.","title":"Par\u00e1metros de Ox\u00edgeno"},{"location":"ventilador/parametros/oxigeno/#concentracion-de-oxigeno","text":"Su siglas son O _2 _2 % . Se mide en porcentaje, de 0 a 100 %.","title":"Concentraci\u00f3n de Ox\u00edgeno"},{"location":"ventilador/parametros/oxigeno/#fraccion-inspiratorio-de-oxigeno","text":"Su siglas son FiO _2 _2 . Se mide en fracci\u00f3n, de 0.0. a 1.00.","title":"Fracci\u00f3n inspiratorio de Ox\u00edgeno"},{"location":"ventilador/parametros/parametros/","text":"Par\u00e1metros \u00b6 En la ventilaci\u00f3n mec\u00e1nica los sanitarios usan muchos par\u00e1metros para ayudarse. Nosotros nos hemos centrado en 16 par\u00e1metros. Algunos no son editables, otros en realidad se configuran al configurar otros. Dependiendo de los modos, se usan alrededor de 12 par\u00e1metros. Par\u00e1metros por categor\u00eda Par\u00e1metros de Presi\u00f3n Presi\u00f3n inspiratoria (o Presi\u00f3n) Presi\u00f3n Pico Presi\u00f3n Positiva al Final de la Expiraci\u00f3n Presi\u00f3n Plateau (o Presi\u00f3n Meseta) Par\u00e1metros de Volumen Volumen Tidal Flujo inspiratorio Par\u00e1metros de Tiempo Frecuencia Respiratoria (o Frecuencia) Tiempo inspiratorio Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n Par\u00e1metros de Ox\u00edgeno Fracci\u00f3n inspiratorio de Ox\u00edgeno Concentraci\u00f3n de Ox\u00edgeno Par\u00e1metros Pulmonares Compliancia (o Compliance) Par\u00e1metros de Ventilaci\u00f3n Asistida Trigger de presi\u00f3n Trigger de flujo Rampa Par\u00e1metros de Ventilaci\u00f3n Soporte Presi\u00f3n Soporte","title":"Par\u00e1metros"},{"location":"ventilador/parametros/parametros/#parametros","text":"En la ventilaci\u00f3n mec\u00e1nica los sanitarios usan muchos par\u00e1metros para ayudarse. Nosotros nos hemos centrado en 16 par\u00e1metros. Algunos no son editables, otros en realidad se configuran al configurar otros. Dependiendo de los modos, se usan alrededor de 12 par\u00e1metros. Par\u00e1metros por categor\u00eda Par\u00e1metros de Presi\u00f3n Presi\u00f3n inspiratoria (o Presi\u00f3n) Presi\u00f3n Pico Presi\u00f3n Positiva al Final de la Expiraci\u00f3n Presi\u00f3n Plateau (o Presi\u00f3n Meseta) Par\u00e1metros de Volumen Volumen Tidal Flujo inspiratorio Par\u00e1metros de Tiempo Frecuencia Respiratoria (o Frecuencia) Tiempo inspiratorio Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n Par\u00e1metros de Ox\u00edgeno Fracci\u00f3n inspiratorio de Ox\u00edgeno Concentraci\u00f3n de Ox\u00edgeno Par\u00e1metros Pulmonares Compliancia (o Compliance) Par\u00e1metros de Ventilaci\u00f3n Asistida Trigger de presi\u00f3n Trigger de flujo Rampa Par\u00e1metros de Ventilaci\u00f3n Soporte Presi\u00f3n Soporte","title":"Par\u00e1metros"},{"location":"ventilador/parametros/presion/","text":"Par\u00e1metros de Presi\u00f3n \u00b6 La presi\u00f3n es una magnitud f\u00edsica que, para entendernos, se refiere a la fuerza con la que se introduce el aire en el paciente. Si el control se hace por presi\u00f3n, esta ser\u00e1 pr\u00e1cticamente constante cuando se inspira. En cambio cuando el control es por volumen, su compartamiento din\u00e1mica es como el que se observa en la imagen siguiente: La presi\u00f3n crece hasta un pico mientras se inspira. Luego hay un tiempo de relajaci\u00f3n (plateau o meseta). Por \u00faltimo en la espiraci\u00f3n, la presi\u00f3n cae hasta un valor definido. Se adjunta una tabla con los par\u00e1metros y su informaci\u00f3n. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Presi\u00f3n inspiratoria P _{insp} _{insp} o P cmH _2 _2 O 18 4 60 1 Presi\u00f3n Pico P _{pk} _{pk} o PIP cmH _2 _2 O Presi\u00f3n Positiva al Final de la Espiraci\u00f3n PEEP cmH _2 _2 O 5 0 30 1 Presi\u00f3n Plateau P _{plt} _{plt} o P _{mes} _{mes} cmH _2 _2 O Nota para todas las tablas de par\u00e1metros Los par\u00e1metros que no tienen valores definidos, es que no son par\u00e1metros editables en el ventilador. Son solo par\u00e1metros de lectura. Presi\u00f3n inspiratoria (o Presi\u00f3n) \u00b6 Su siglas son P _{insp} _{insp} o P . Es la presi\u00f3n con la que se inserta aire en el paciente. Control por volumen Cuando el ventilador se controla por presi\u00f3n, la Presi\u00f3n inspiratoria y la Presi\u00f3n pico son el mismo par\u00e1metro. P _{insp} _{insp} = P _{pk} _{pk} Presi\u00f3n pico (o Presi\u00f3n Inspiratoria Pico) \u00b6 Su siglas son P _{pk} _{pk} o PIP . Es la m\u00e1xima presi\u00f3n que se alcanza en la inspiraci\u00f3n. No es un par\u00e1metro editble. Presi\u00f3n Positiva al Final de la Espiraci\u00f3n \u00b6 Su siglas son PEEP . Es la presi\u00f3n de aire con la que se dejan los alv\u00e9olos al final de la espiraci\u00f3n para que no se acaben desinflando. Esto se hace para que el alveolo no sufra ni se colapse. Presi\u00f3n Plateau (o Presi\u00f3n meseta teleinspiratoria) \u00b6 Su siglas son P _{plt} _{plt} o P _{mes} _{mes} . Esta presi\u00f3n se observa cuando el control se hace por volumen. Despu\u00e9s de inspirar hay un tiempo de reposo antes de espirar. En este tiempo de reposo, la baja presi\u00f3n baja, pero muy lentamente, se mantiene casi constante. En la gr\u00e1fica se observa una \"meseta\", por eso el nombre de tiempo y presi\u00f3n meseta (o plateau). No es un par\u00e1metro editable.","title":"Presi\u00f3n"},{"location":"ventilador/parametros/presion/#parametros-de-presion","text":"La presi\u00f3n es una magnitud f\u00edsica que, para entendernos, se refiere a la fuerza con la que se introduce el aire en el paciente. Si el control se hace por presi\u00f3n, esta ser\u00e1 pr\u00e1cticamente constante cuando se inspira. En cambio cuando el control es por volumen, su compartamiento din\u00e1mica es como el que se observa en la imagen siguiente: La presi\u00f3n crece hasta un pico mientras se inspira. Luego hay un tiempo de relajaci\u00f3n (plateau o meseta). Por \u00faltimo en la espiraci\u00f3n, la presi\u00f3n cae hasta un valor definido. Se adjunta una tabla con los par\u00e1metros y su informaci\u00f3n. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Presi\u00f3n inspiratoria P _{insp} _{insp} o P cmH _2 _2 O 18 4 60 1 Presi\u00f3n Pico P _{pk} _{pk} o PIP cmH _2 _2 O Presi\u00f3n Positiva al Final de la Espiraci\u00f3n PEEP cmH _2 _2 O 5 0 30 1 Presi\u00f3n Plateau P _{plt} _{plt} o P _{mes} _{mes} cmH _2 _2 O Nota para todas las tablas de par\u00e1metros Los par\u00e1metros que no tienen valores definidos, es que no son par\u00e1metros editables en el ventilador. Son solo par\u00e1metros de lectura.","title":"Par\u00e1metros de Presi\u00f3n"},{"location":"ventilador/parametros/presion/#presion-inspiratoria-o-presion","text":"Su siglas son P _{insp} _{insp} o P . Es la presi\u00f3n con la que se inserta aire en el paciente. Control por volumen Cuando el ventilador se controla por presi\u00f3n, la Presi\u00f3n inspiratoria y la Presi\u00f3n pico son el mismo par\u00e1metro. P _{insp} _{insp} = P _{pk} _{pk}","title":"Presi\u00f3n inspiratoria (o Presi\u00f3n)"},{"location":"ventilador/parametros/presion/#presion-pico-o-presion-inspiratoria-pico","text":"Su siglas son P _{pk} _{pk} o PIP . Es la m\u00e1xima presi\u00f3n que se alcanza en la inspiraci\u00f3n. No es un par\u00e1metro editble.","title":"Presi\u00f3n pico (o Presi\u00f3n Inspiratoria Pico)"},{"location":"ventilador/parametros/presion/#presion-positiva-al-final-de-la-espiracion","text":"Su siglas son PEEP . Es la presi\u00f3n de aire con la que se dejan los alv\u00e9olos al final de la espiraci\u00f3n para que no se acaben desinflando. Esto se hace para que el alveolo no sufra ni se colapse.","title":"Presi\u00f3n Positiva al Final de la Espiraci\u00f3n"},{"location":"ventilador/parametros/presion/#presion-plateau-o-presion-meseta-teleinspiratoria","text":"Su siglas son P _{plt} _{plt} o P _{mes} _{mes} . Esta presi\u00f3n se observa cuando el control se hace por volumen. Despu\u00e9s de inspirar hay un tiempo de reposo antes de espirar. En este tiempo de reposo, la baja presi\u00f3n baja, pero muy lentamente, se mantiene casi constante. En la gr\u00e1fica se observa una \"meseta\", por eso el nombre de tiempo y presi\u00f3n meseta (o plateau). No es un par\u00e1metro editable.","title":"Presi\u00f3n Plateau (o Presi\u00f3n meseta teleinspiratoria)"},{"location":"ventilador/parametros/pulmon/","text":"Par\u00e1metros del Pulm\u00f3n \u00b6 Solo se usa un par\u00e1metro, la compliancia. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Compliancia Csr mL/cmH _2 _2 O Compliancia (o Compliance) \u00b6 Su siglas son Csr . Mide la elasticidad que tiene el pulm\u00f3n. Para que el aire insuflado llegue a los pulmones, se debe de vencer una resistencia el\u00e1stica de estos a expandirse a trav\u00e9s de una presi\u00f3n. La compliancia es la relaci\u00f3n entre el aumento de volumen pulmonar y el gradiente presi\u00f3n que hay que aplicar. Es un par\u00e1metro de solo lectura. Csr = \\frac{\u0394V}{\u0394P} = \\frac{V_T}{P_{pk} - PEEP} Csr = \\frac{\u0394V}{\u0394P} = \\frac{V_T}{P_{pk} - PEEP}","title":"Pulm\u00f3n"},{"location":"ventilador/parametros/pulmon/#parametros-del-pulmon","text":"Solo se usa un par\u00e1metro, la compliancia. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Compliancia Csr mL/cmH _2 _2 O","title":"Par\u00e1metros del Pulm\u00f3n"},{"location":"ventilador/parametros/pulmon/#compliancia-o-compliance","text":"Su siglas son Csr . Mide la elasticidad que tiene el pulm\u00f3n. Para que el aire insuflado llegue a los pulmones, se debe de vencer una resistencia el\u00e1stica de estos a expandirse a trav\u00e9s de una presi\u00f3n. La compliancia es la relaci\u00f3n entre el aumento de volumen pulmonar y el gradiente presi\u00f3n que hay que aplicar. Es un par\u00e1metro de solo lectura. Csr = \\frac{\u0394V}{\u0394P} = \\frac{V_T}{P_{pk} - PEEP} Csr = \\frac{\u0394V}{\u0394P} = \\frac{V_T}{P_{pk} - PEEP}","title":"Compliancia (o Compliance)"},{"location":"ventilador/parametros/soporte/","text":"Par\u00e1metros de Ventilaci\u00f3n Soporte \u00b6 TODO: Faltan datos por completar En la ventilaci\u00f3n soporte, el paciente es el que manda, es decir, respira solo, pero bajo la supervisi\u00f3n del ventilador. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Presi\u00f3n soporte falta cmH _2 _2 O falta falta falta falta Presi\u00f3n soporte \u00b6 Su siglas son falta . Es una presi\u00f3n que se ejerce para que el paciente alcance unos criterios en la respiraci\u00f3n.","title":"Ventilaci\u00f3n Soporte"},{"location":"ventilador/parametros/soporte/#parametros-de-ventilacion-soporte","text":"TODO: Faltan datos por completar En la ventilaci\u00f3n soporte, el paciente es el que manda, es decir, respira solo, pero bajo la supervisi\u00f3n del ventilador. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Presi\u00f3n soporte falta cmH _2 _2 O falta falta falta falta","title":"Par\u00e1metros de Ventilaci\u00f3n Soporte"},{"location":"ventilador/parametros/soporte/#presion-soporte","text":"Su siglas son falta . Es una presi\u00f3n que se ejerce para que el paciente alcance unos criterios en la respiraci\u00f3n.","title":"Presi\u00f3n soporte"},{"location":"ventilador/parametros/tiempo/","text":"Par\u00e1metros de Tiempo \u00b6 La respiraci\u00f3n o ciclo respiratorio se divide en dos partes: Tiempo de inspiraci\u00f3n = Tiempo de insuflaci\u00f3n + Tiempo plateau. Es cuando se inspira / inhala. Primero se insufla aire. Luego se espera un tiempo (plateau-meseta-pausa) que se relajen los pulmones y acabe de entrar el aire a los alv\u00e9olos. Tiempo de espiraci\u00f3n. Es cuando se espira / exhala. As\u00ed que los par\u00e1metros de tiempo tienen que ver tanto con la cantidad de ciclos respiratorios en un tiempo determinado (frecuencia), as\u00ed como son esos ciclos respiratorios. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Frecuencia Respiratoria FR o f _r _r 1/min 15 6 35 1 Tiempo inspiratorio T _{insp} _{insp} seg 1.33 0.5 5 0.01 Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n I:E 1:2 Frecuencia Respiratoria por minuto (o Frecuencia) \u00b6 Su siglas son FR o f _r _r . Es la cantidad de ciclos respiratorios por minuto que tiene que hacer el paciente. Tiempo de inspiraci\u00f3n \u00b6 Su siglas son T _{insp} _{insp} . Es el tiempo que dura la inspiraci\u00f3n, que es el tiempo de insuflar aire + tiempo plateau (cuando se est\u00e1n expandiendo los alv\u00e9olos). Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n \u00b6 Su siglas son I:E . Es la relaci\u00f3n en proporci\u00f3n que existe entre el tiempo de inspiraci\u00f3n y el tiempo de expiraci\u00f3n. No se suele configurar el tiempo de expiraci\u00f3n directamente, sino que se configura a trav\u00e9s del T _{insp} _{insp} y la I: E . La I ser\u00e1 1 y solo cambia la E. Relaci\u00f3n entre FR - T _{insp} _{insp} - I:E \\frac{60}{FR} = T_{insp} + T_{esp} \\frac{60}{FR} = T_{insp} + T_{esp} T_{esp} = \\frac{60}{FR} - T_{insp} T_{esp} = \\frac{60}{FR} - T_{insp} I:E = 1:\\frac{T_{esp}}{T_{insp}} = 1:\\frac{60}{FR*T_{insp}}-1 I:E = 1:\\frac{T_{esp}}{T_{insp}} = 1:\\frac{60}{FR*T_{insp}}-1","title":"Tiempo"},{"location":"ventilador/parametros/tiempo/#parametros-de-tiempo","text":"La respiraci\u00f3n o ciclo respiratorio se divide en dos partes: Tiempo de inspiraci\u00f3n = Tiempo de insuflaci\u00f3n + Tiempo plateau. Es cuando se inspira / inhala. Primero se insufla aire. Luego se espera un tiempo (plateau-meseta-pausa) que se relajen los pulmones y acabe de entrar el aire a los alv\u00e9olos. Tiempo de espiraci\u00f3n. Es cuando se espira / exhala. As\u00ed que los par\u00e1metros de tiempo tienen que ver tanto con la cantidad de ciclos respiratorios en un tiempo determinado (frecuencia), as\u00ed como son esos ciclos respiratorios. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Frecuencia Respiratoria FR o f _r _r 1/min 15 6 35 1 Tiempo inspiratorio T _{insp} _{insp} seg 1.33 0.5 5 0.01 Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n I:E 1:2","title":"Par\u00e1metros de Tiempo"},{"location":"ventilador/parametros/tiempo/#frecuencia-respiratoria-por-minuto-o-frecuencia","text":"Su siglas son FR o f _r _r . Es la cantidad de ciclos respiratorios por minuto que tiene que hacer el paciente.","title":"Frecuencia Respiratoria por minuto (o Frecuencia)"},{"location":"ventilador/parametros/tiempo/#tiempo-de-inspiracion","text":"Su siglas son T _{insp} _{insp} . Es el tiempo que dura la inspiraci\u00f3n, que es el tiempo de insuflar aire + tiempo plateau (cuando se est\u00e1n expandiendo los alv\u00e9olos).","title":"Tiempo de inspiraci\u00f3n"},{"location":"ventilador/parametros/tiempo/#relacion-inspiracionespiracion","text":"Su siglas son I:E . Es la relaci\u00f3n en proporci\u00f3n que existe entre el tiempo de inspiraci\u00f3n y el tiempo de expiraci\u00f3n. No se suele configurar el tiempo de expiraci\u00f3n directamente, sino que se configura a trav\u00e9s del T _{insp} _{insp} y la I: E . La I ser\u00e1 1 y solo cambia la E. Relaci\u00f3n entre FR - T _{insp} _{insp} - I:E \\frac{60}{FR} = T_{insp} + T_{esp} \\frac{60}{FR} = T_{insp} + T_{esp} T_{esp} = \\frac{60}{FR} - T_{insp} T_{esp} = \\frac{60}{FR} - T_{insp} I:E = 1:\\frac{T_{esp}}{T_{insp}} = 1:\\frac{60}{FR*T_{insp}}-1 I:E = 1:\\frac{T_{esp}}{T_{insp}} = 1:\\frac{60}{FR*T_{insp}}-1","title":"Relaci\u00f3n Inspiraci\u00f3n:Espiraci\u00f3n"},{"location":"ventilador/parametros/volumen/","text":"Par\u00e1metros de Volumen \u00b6 Estos par\u00e1metros se relacionan con la cantidad de aire que entra. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Volumen Tidal V _T _T mL 500 200 1000 25 - 50 Flujo inspiratorio F _{insp} _{insp} L/min 60 40 80 10 Volumen Tidal \u00b6 Su siglas son V _T _T . Es la cantidad de aire que se introduce al paciente. Flujo inspiratorio (Flujo) \u00b6 Su siglas son F _{insp} _{insp} . Es la velocidad a la que se introduce aire al paciente.","title":"Volumen"},{"location":"ventilador/parametros/volumen/#parametros-de-volumen","text":"Estos par\u00e1metros se relacionan con la cantidad de aire que entra. Par\u00e1metro Siglas Unidades Valor por defecto M\u00ednimo M\u00e1ximo Incremento \u00b1\u2206 Volumen Tidal V _T _T mL 500 200 1000 25 - 50 Flujo inspiratorio F _{insp} _{insp} L/min 60 40 80 10","title":"Par\u00e1metros de Volumen"},{"location":"ventilador/parametros/volumen/#volumen-tidal","text":"Su siglas son V _T _T . Es la cantidad de aire que se introduce al paciente.","title":"Volumen Tidal"},{"location":"ventilador/parametros/volumen/#flujo-inspiratorio-flujo","text":"Su siglas son F _{insp} _{insp} . Es la velocidad a la que se introduce aire al paciente.","title":"Flujo inspiratorio (Flujo)"}]}